<Page x:Name="pageImport"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
         xmlns:mainpref="clr-namespace:Cognitivo.Properties"
       xmlns:converter="clr-namespace:Cognitivo.Converters"
        xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"
        xmlns:customcmd="clr-namespace:Cognitivo.Class"
        xmlns:lex="http://wpflocalizeextension.codeplex.com"
        xmlns:entity="clr-namespace:entity;assembly=entity" x:Class="Cognitivo.Purchase.Import" Title="{lex:Loc Imports}"
        lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo"
        lex:ResxLocalizationProvider.DefaultDictionary="local"
        lex:LocalizeDictionary.DesignCulture="en-US"
        mc:Ignorable="d" d:DesignHeight="600" d:DesignWidth="800" Loaded="Page_Loaded">
    <Page.CommandBindings>
        <CommandBinding x:Name="DeleteCommand" Command="customcmd:CustomCommands.Delete" CanExecute="DeleteCommand_CanExecute" Executed="DeleteCommand_Executed" />
    </Page.CommandBindings>
    <Page.Resources>
        <converter:ToStringFormatConverter x:Key="ToStringFormatConverter" />
        <CollectionViewSource x:Key="impexViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:impex}, CreateList=True}" />
        <CollectionViewSource x:Key="impeximpex_expenseViewSource" Source="{Binding impex_expense, Source={StaticResource impexViewSource}}" />
        <CollectionViewSource x:Key="incotermViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:impex_incoterm}, CreateList=True}" />
        <CollectionViewSource x:Key="statusViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:Status}, CreateList=True}" />
        <CollectionViewSource x:Key="purchase_invoiceViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:purchase_invoice}, CreateList=True}" />
        <CollectionViewSource x:Key="impeximpex_importViewSource" Source="{Binding impex_import, Source={StaticResource impexViewSource}}" />
        <CollectionViewSource x:Key="currencyfxViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_currencyfx}, CreateList=True}" />
        <CollectionViewSource x:Key="incotermconditionViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:impex_incoterm_condition}, CreateList=True}" />
    </Page.Resources>
    <Grid Background="White" DataContext="{StaticResource impexViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden"
              Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5" />
        <ListBox x:Name="impexDataGrid"  Background="{StaticResource AccentColor_Brush}"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionChanged="impexDataGrid_SelectionChanged"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
                 ItemsSource="{Binding}" Grid.Row="1">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordCode="{Binding eta, StringFormat=d}"
                                   recordSecondaryName="{Binding contact.name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   recordName="{Binding number}"
                                   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    </cntrl:navList>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="229" />
                <RowDefinition Height="6" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center" Margin="18,0" Width="264">
                <StackPanel  IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}"
                            HorizontalAlignment="Center">
                    <Label Content="{lex:Loc Header}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />

                    <Label Content="{lex:Loc Name}" Style="{StaticResource input_label}" />
                    <TextBox x:Name="numberTextBox" Text="{Binding number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource input_textbox}" />
                    <Label Content="{lex:Loc Supplier}" Style="{StaticResource input_label}" />
                    <Controls:SmartBox_Contact x:Name="sbxContact" Get_Suppliers="True" Select="set_ContactPref"
                                               HorizontalAlignment="Left" Text="{Binding contact.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Label Content="{lex:Loc Incoterm}" Style="{StaticResource input_label}" />
                    <ComboBox x:Name="id_incotermComboBox" Style="{StaticResource input_combobox}"
                              ItemsSource="{Binding Source={StaticResource incotermViewSource}}"
                              DisplayMemberPath="name" SelectedValuePath="id_incoterm" SelectedValue="{Binding id_incoterm, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                    <CheckBox x:Name="is_activeCheckBox" Width="180" Content="{lex:Loc Active}" IsChecked="{Binding is_active, Mode=TwoWay}" Style="{StaticResource input_checkbox}" />
                </StackPanel>
            </ScrollViewer>
            <StackPanel
                        Grid.Column="1" Grid.Row="0" Margin="4,0,0,0">
                <Label Content="{lex:Loc QuickAction}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <Label Content="" Style="{StaticResource btn_Label}" />
                    <TextBlock Margin="5,0" VerticalAlignment="Center"><Hyperlink PreviewMouseUp="toolBar_btnPrint_Click"><Run Text="{lex:Loc Document}" /></Hyperlink></TextBlock>
                </StackPanel>

                <StackPanel  Orientation="Horizontal" VerticalAlignment="Center"  IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                    <Label Content="{lex:Loc Status}" Style="{StaticResource input_label}" />
                    <ComboBox x:Name="statusComboBox" Style="{StaticResource input_combobox}"
                          ItemsSource="{Binding Source={StaticResource statusViewSource}}" Width="180"
                          DisplayMemberPath="name" SelectedValuePath="status" SelectedValue="{Binding status,Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </StackPanel>
                <StackPanel  Orientation="Horizontal" VerticalAlignment="Center"  IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                    <Label Content="" Style="{StaticResource ico_Label}"
                                FontFamily="/Cognitivo;component/Resources/#cognitivo" />
                    <TextBlock Style="{StaticResource text_Data}">
                            <Hyperlink PreviewMouseUp="Hyperlink_PreviewMouseUp">
                                <Run Text="{lex:Loc PurchaseInvoice}" />
                            </Hyperlink>
                    </TextBlock>
                    <ItemsControl ItemsSource="{Binding Source={StaticResource impeximpex_importViewSource}}" Margin="0">
                        <!-- host the items generated by this ItemsControl in a grid -->
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <!-- render each bound item using a TextBlock-->
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Top" Margin="5,0"  Style="{StaticResource text_Label}"><Hyperlink Tag="{Binding purchase_invoice}"><Run Text="{Binding purchase_invoice.number}" /></Hyperlink></TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
                <StackPanel  Orientation="Horizontal" VerticalAlignment="Center"  IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                    <Label Content="{Binding Currency, Source={StaticResource impexViewSource},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,FallbackValue=Curr}" />
                    <TextBox Text="{Binding fx_rate,StringFormat=N2,Source={StaticResource impexViewSource}, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Style="{StaticResource input_textbox}" />
                </StackPanel>
                <StackPanel  Orientation="Horizontal" VerticalAlignment="Center"  IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                    <Label Content="PurchaseTotal" />
                    <Label>
                        <Label.Content>
                            <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                <Binding Path="PurchaseTotal" TargetNullValue="" Mode="TwoWay" Source="{StaticResource impexViewSource}" />
                                <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                            </MultiBinding>
                        </Label.Content>
                    </Label>
                </StackPanel>
                <StackPanel  Orientation="Horizontal" VerticalAlignment="Center"  IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                    <Label Content="ExpenseTotal" />
                    <Label>
                        <Label.Content>
                            <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                <Binding Path="ExpenseTotal" TargetNullValue="" Mode="TwoWay" Source="{StaticResource impexViewSource}" />
                                <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                            </MultiBinding>
                        </Label.Content>
                    </Label>
                </StackPanel>
            </StackPanel>

            <GridSplitter Grid.ColumnSpan="2" Grid.Row="1" Margin="0,2" HorizontalAlignment="Stretch" />

            <TabControl Grid.Row="2" Grid.ColumnSpan="2" metro:TabControlHelper.IsUnderlined="True" SelectionChanged="TabControl_SelectionChanged">
                <TabItem Header="{lex:Loc Date}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0">
                            <Label Content="{lex:Loc EstimatedDateofDeparture}" Style="{StaticResource input_label}" />
                            <DatePicker x:Name="etdDatePicker" SelectedDate="{Binding est_shipping_date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_datepicker}" />
                            <Label Content="{lex:Loc DepartureDate}" Style="{StaticResource input_label}" />
                            <DatePicker SelectedDate="{Binding est_landed_date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource input_datepicker}" />
                        </StackPanel>
                        <StackPanel  Grid.Column="1">
                            <Label Content="{lex:Loc EstimatedDateofArrival}" Style="{StaticResource input_label}" />
                            <DatePicker x:Name="etaDatePicker" SelectedDate="{Binding est_landed_date, Mode=TwoWay,
                                 UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource input_datepicker}" />
                            <Label Content="{lex:Loc ArrivalDate}" Style="{StaticResource input_label}" />
                            <DatePicker SelectedDate="{Binding real_landed_date, Mode=TwoWay,
                              UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource input_datepicker}" />
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="{lex:Loc Purchase}">
                    <Grid>

                        <DataGrid x:Name="impex_importDataGrid" AutoGenerateColumns="False" IsReadOnly="True" CanUserDeleteRows="False"
                                EnableRowVirtualization="True" Height="Auto" Margin="0,4" HorizontalScrollBarVisibility="Auto"
                                RowDetailsVisibilityMode="VisibleWhenSelected" Width="Auto">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding number}" Header="{lex:Loc Cognitivo:local:InvoiceNumber}" Width="100" />
                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Code}" MinWidth="64" MaxWidth="128" Binding="{Binding item_code}" />
                                <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Items}" MinWidth="64" MaxWidth="256" Binding="{Binding item}" />
                                <DataGridTextColumn 
                                                Width="64" CellStyle="{StaticResource Number_CellStyle}"
                                                Header="{lex:Loc Cognitivo:local:Quantity}" ElementStyle="{StaticResource RightAlignStyle}" >
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                            <Binding Path="quantity" TargetNullValue="" Mode="TwoWay" />
                                            <Binding Source="{x:Static mainpref:Settings.Default}" Path="QuantityDecimalStringFormat" Mode="OneWay" />
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                                <DataGridTextColumn 
                                                    Width="64" CellStyle="{StaticResource Number_CellStyle}"
                                                Header="{lex:Loc Cognitivo:local:Cost}" ElementStyle="{StaticResource RightAlignStyle}" >
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                            <Binding Path="unit_cost" TargetNullValue="" Mode="TwoWay" />
                                            <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                                <DataGridTextColumn 
                                                    Width="64" CellStyle="{StaticResource Number_CellStyle}"
                                                Header="{lex:Loc Cognitivo:local:Expenses}" ElementStyle="{StaticResource RightAlignStyle}" >
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                            <Binding Path="unit_Importcost" TargetNullValue="" Mode="TwoWay" />
                                            <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                                <DataGridTextColumn 
                                                    Width="64" CellStyle="{StaticResource Number_CellStyle}"
                                                Header="{lex:Loc Cognitivo:local:FinalCost}" ElementStyle="{StaticResource RightAlignStyle}" >
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                            <Binding Path="prorated_cost" TargetNullValue="" Mode="TwoWay" />
                                            <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                                <DataGridTextColumn 
                                                Header="{lex:Loc Cognitivo:local:SubTotal}" Width="128"
                                                ElementStyle="{StaticResource RightAlignStyle}" >
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                            <Binding Path="sub_total" TargetNullValue="" Mode="TwoWay" />
                                            <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="{lex:Loc Expenses}">
                    <Grid IsEnabled="{Binding ElementName=pageImport, Path=SetIsEnable, UpdateSourceTrigger=PropertyChanged}"
                                    ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <TextBlock VerticalAlignment="Top" Style="{StaticResource text_HyperLinks}" 
                                   Text="{lex:Loc Extract}" MouseUp="GetExpenses_PreviewMouseUp" />
                        <Grid Margin="0,25,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <DataGrid  x:Name="impeximpex_expenseDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True"
                                       ItemsSource="{Binding Source={StaticResource impeximpex_expenseViewSource}}" CanUserDeleteRows="False"
                                       RowEditEnding="impeximpex_expenseDataGrid_RowEditEnding"
                                       RowDetailsVisibilityMode="VisibleWhenSelected" Margin="4">
                                <DataGrid.Columns>
                                    <DataGridComboBoxColumn Header="{lex:Loc Cognitivo:local:IncotermCondition}" Width="*" ItemsSource="{Binding Source={StaticResource incotermconditionViewSource}}"
                                                            DisplayMemberPath="name" SelectedValuePath="id_incoterm_condition"
                                                            SelectedValueBinding="{Binding id_incoterm_condition, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                    <!--<DataGridComboBoxColumn Header="{lex:Loc Cognitivo:local:PurchaseInvoice}" Width="SizeToHeader" ItemsSource="{Binding Source={StaticResource purchase_invoiceViewSource}}"
                                                            DisplayMemberPath="number" SelectedValuePath="id_purchase_invoice"
                                                            SelectedValueBinding="{Binding number, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />-->
                                    <DataGridTextColumn Binding="{Binding value, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, StringFormat={}{0:N2}}"
                                                        Header="{lex:Loc Cognitivo:local:Value}" ElementStyle="{StaticResource RightAlignStyle}" />
                                    <DataGridComboBoxColumn IsReadOnly="True" Header="{lex:Loc Cognitivo:local:Currency}" Width="SizeToHeader" ItemsSource="{Binding Source={StaticResource currencyfxViewSource}}"
                                                            DisplayMemberPath="app_currency.name" SelectedValuePath="id_currencyfx"
                                                            SelectedValueBinding="{Binding id_currencyfx, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                    <DataGridTemplateColumn Width="25">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" Style="{StaticResource btnDeleteChildStyle}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <DataGrid x:Name="productDataGrid" AutoGenerateColumns="False" Grid.Column="1" CanUserDeleteRows="False"
                                EnableRowVirtualization="True" Height="Auto" Margin="0,4,4,4"
                                RowDetailsVisibilityMode="VisibleWhenSelected" Width="Auto" SelectionChanged="productDataGrid_SelectionChanged">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Items}" Width="*" Binding="{Binding item}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>

            <Grid Grid.Row="2" Grid.Column="1" Margin="14" HorizontalAlignment="Right" VerticalAlignment="Top" Height="26" Width="155">
                <TextBox Width="155" x:Name="txtsearch" Height="26" VerticalAlignment="Center" HorizontalAlignment="Right"
                         Padding="14,0,0,0" TextChanged="TextBox_TextChanged" />
                <Label Content="L" Style="{StaticResource ico_Label}" HorizontalAlignment="Left" Foreground="Silver" />
            </Grid>
        </Grid>

        <cntrl:toolBar x:Name="toolBar"
                       btnSearch_Click="toolBar_btnSearch_Click"
                       btnCancel_Click="toolBar_btnCancel_Click_1"
                       btnEdit_Click="toolBar_btnEdit_Click_1"
                       btnNew_Click="toolBar_btnNew_Click_1"
                       btnSave_Click="toolBar_btnSave_Click_1"
                       btnApprove_Click="toolBar_btnApprove_Click"
                       btnAnull_Click="ToolBar_btnAnull_Click"
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                       Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
			           VerticalAlignment="Top" Grid.ColumnSpan="2" Grid.Row="0"
                       HorizontalAlignment="Stretch" appName="Imports" />
    </Grid>
</Page>