<Page x:Class="Cognitivo.Sales.Budget" Title="{lex:Loc SalesBudget}"
	  xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls" 
      Background="{StaticResource winBackground}"
	  xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:entity="clr-namespace:entity;assembly=entity" 
	  xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
         xmlns:Salescontroller="clr-namespace:entity.Controller.Sales;assembly=entity"
	  xmlns:converter="clr-namespace:Cognitivo.Converters"
	  xmlns:pref="clr-namespace:Cognitivo.Sales"
	  xmlns:customcmd="clr-namespace:Cognitivo.Class"
	  xmlns:mainpref="clr-namespace:Cognitivo.Properties"
	  mc:Ignorable="d" MinHeight="550" MinWidth="750"
	  xmlns:lex="http://wpflocalizeextension.codeplex.com"
		lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo"
		lex:ResxLocalizationProvider.DefaultDictionary="local"
		lex:LocalizeDictionary.DesignCulture="en-US"
	  Loaded="Page_Loaded">
    <Page.CommandBindings>
        <CommandBinding x:Name="DeleteCommand" Command="customcmd:CustomCommands.Delete" CanExecute="DeleteCommand_CanExecute" Executed="DeleteCommand_Executed" />
    </Page.CommandBindings>
    <Page.Resources>
        <Salescontroller:BudgetController x:Key="SalesBudget"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <converter:TrueToFalseConverter x:Key="TrueToFalse" />
        <converter:TextChangeToIsEnableConverter x:Key="TextChangeToEnable" />
        <converter:ExpireDate2Visible x:Key="ExpireDate2Visible" />
        <converter:ToStringFormatConverter x:Key="ToStringFormatConverter" />
        <converter:SalesBudgetPriceUpdate x:Key="SalesBudgetPrice" />
        <CollectionViewSource x:Key="sales_budgetViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:sales_budget},CreateList=True}" />
        <CollectionViewSource x:Key="sales_budgetsales_budget_detailViewSource" Source="{Binding sales_budget_detail, Source={StaticResource sales_budgetViewSource}}" />
        <CollectionViewSource x:Key="app_document_rangeViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_document_range}, CreateList=True}" />
    </Page.Resources>
    <Grid DataContext="{StaticResource sales_budgetViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ListBox ScrollViewer.VerticalScrollBarVisibility="Auto" x:Name="sales_budgetDataGrid" Style="{StaticResource nav_List}"
				 ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionChanged="Sales_BudgetDataGrid_SelectionChanged"
				 ItemContainerStyle="{StaticResource nav_ListSelection}"
				 ItemsSource="{Binding}" Grid.Row="1">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordCode="{Binding trans_date, StringFormat=d, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   recordSecondaryName="{Binding number, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   recordName="{Binding contact.name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        
        <syncfusion:SfDataPager x:Name="dataPager" VerticalAlignment="Bottom" PageSize="5" Grid.Row="1"
                                                UseOnDemandPaging="True" PagedSource="{Binding}" OnDemandLoading="dataPager_OnDemandLoading"/>
        <Grid Grid.Column="1" Grid.Row="1" Background="{StaticResource winBackground}" IsEnabled="{Binding is_accounted, Converter={StaticResource TrueToFalse}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="390" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ScrollViewer>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel HorizontalAlignment="Center" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                            <Label Content="{lex:Loc Date}" Style="{StaticResource input_label}" />
                            <DatePicker x:Name="trans_dateDatePicker" Style="{StaticResource input_datepicker}"
							SelectedDate="{Binding trans_date, Mode=TwoWay, NotifyOnValidationError=true,
								UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=true}" />
                            <Label Content="{lex:Loc Customer}"  Style="{StaticResource input_label}" />
                            <Controls:SmartBox_Contact x:Name="sbxContact" Get_Customers="True" Select="Set_ContactPref"
												CanModify="True" CanCreate="True" Text="{Binding contact.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />

                            <Label Content="{lex:Loc Document}" Style="{StaticResource input_label}" />
                            <ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range"
							  metro:TextBoxHelper.Watermark="{lex:Loc Document}" SelectedIndex="0"
							  metro:TextBoxHelper.SelectAllOnFocus="True"
							  Style="{StaticResource input_combobox}"
							  IsEnabled="{Binding Text, Converter={StaticResource TextChangeToEnable}, ElementName=tbxBudgetNumber, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
							  ItemsSource="{Binding Source={StaticResource app_document_rangeViewSource}}"
							  SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                            <Label Content="{lex:Loc BudgetNumber}" Style="{StaticResource input_label}" />
                            <TextBox Style="{StaticResource input_textbox}"
									 metro:TextBoxHelper.Watermark="{Binding NumberWatermark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
									 Text="{Binding number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                            <Label Content="{lex:Loc Condition}"  Style="{StaticResource input_label}" />
                            <ComboBox Style="{StaticResource input_combobox}" x:Name="cbxCondition"
									  ItemsSource="{Binding Source={x:Static entity:CurrentSession.Conditions}}"
									  Grid.Column="1" DisplayMemberPath="name" SelectedValuePath="id_condition"
									  SelectedValue="{Binding id_condition, Source={StaticResource sales_budgetViewSource}, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
									  SelectionChanged="id_conditionComboBox_SelectionChanged">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <Label Content="{lex:Loc Contract}" Style="{StaticResource input_label}" />
                            <ComboBox Style="{StaticResource input_combobox}" x:Name="cbxContract"
									  DisplayMemberPath="name" SelectedValuePath="id_contract"
									  SelectedValue="{Binding id_contract, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_budgetViewSource}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
									  ItemsSource="{Binding Source={x:Static entity:CurrentSession.Contracts}}">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                            <Label Content="{lex:Loc Currency}" Style="{StaticResource input_label}" />
                            <Controls:CurrencyBox x:Name="cbxCurrency" appName="SalesBudget"
											  SelectedValue="{Binding id_currencyfx, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True,
																	  UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											  LostFocus="Currency_LostFocus" />

                            <!--<Label Content="{lex:Loc Discount(In %)}" Style="{StaticResource input_label}" />
							<TextBox Text="{Binding DiscountPercentage, StringFormat={}{0:N},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />-->
                        </StackPanel>
                        <!-- SideBar -->
                        <StackPanel Grid.Column="1" VerticalAlignment="Top">
                            <StackPanel>
                                <Label Content="{lex:Loc QuickAction}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                                <StackPanel x:Name="stackpnlCustomize" Orientation="Horizontal" Margin="3,2,0,5">
                                    <Label Content="A" Style="{StaticResource btn_Label}" />
                                    <TextBlock MouseUp="Customize_MouseUp" VerticalAlignment="Center">
									<Hyperlink x:Name="hrefCustomize"><Run Text="@Customize" /></Hyperlink></TextBlock>
                                    <Popup x:Name="popupCustomize" IsOpen="False" StaysOpen="False" Closed="Customize_Closed"
										PlacementTarget="{Binding ElementName=stackpnlCustomize}" Placement="Mouse">
                                        <Border BorderThickness="1" BorderBrush="Gray">
                                            <StackPanel Background="WhiteSmoke" Width="180">
                                                <Label Content="{lex:Loc Header}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                                                <WrapPanel>
                                                    <TextBox Width="30" HorizontalAlignment="Left"
											 Text="{Binding Source={x:Static pref:Settings.Default}, Path=TransDate_Offset, Mode=TwoWay}"
											 Margin="6,2,2,2"></TextBox>
                                                    <Label Content="Offset Date" Style="{StaticResource generic_Label}" />
                                                </WrapPanel>
                                                <Label Content="{lex:Loc Details}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                                                <CheckBox Margin="6,0,0,0" x:Name="chkPriceWithVAT"
										  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Mode=TwoWay}">
                                                    <Label Content="{lex:Loc VATIncluded}" Style="{StaticResource generic_Label}" />
                                                </CheckBox>
                                                <CheckBox Margin="6,0,0,0" x:Name="chkPriceWithoutVAT"
										                  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Mode=TwoWay}">
                                                    <Label Content="{lex:Loc VATExcluded}" Style="{StaticResource generic_Label}" />
                                                </CheckBox>
                                                <Label Content="{lex:Loc QuickLook}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                                                <CheckBox Margin="6,0,0,0" x:Name="chkAvailCredit"
										                  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=AvailableCredit, Mode=TwoWay}">
                                                    <Label Content="{lex:Loc AvailableCredit}" Style="{StaticResource generic_Label}" />
                                                </CheckBox>
                                                <CheckBox Margin="6,0,0,0" x:Name="chkField"
														  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Telephone, Mode=TwoWay}">
                                                    <Label Content="{lex:Loc Telephone}" Style="{StaticResource generic_Label}" />
                                                </CheckBox>
                                                <CheckBox Margin="6,0,0,0" x:Name="chkProject"
														  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Project, Mode=TwoWay}">
                                                    <Label Content="{lex:Loc Projects}" Style="{StaticResource generic_Label}" />
                                                </CheckBox>
                                                <CheckBox Margin="6,0,0,0" x:Name="chkBranch"
														  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Branch, Mode=TwoWay}">
                                                    <Label Content="{lex:Loc Branch}" Style="{StaticResource generic_Label}" />
                                                </CheckBox>
                                                <CheckBox Margin="6,0,0,0" x:Name="chkDuplicateItem"
														  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=AllowDuplicateItem, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                    <Label Content="{lex:Loc AllowDuplicateItem}" Foreground="MediumVioletRed" />
                                                </CheckBox>
                                                <CheckBox Margin="6,0,0,0" x:Name="chkfilterByBranch"
														  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=FilterByBranch, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                    <Label Content="{lex:Loc FilterByBranch}" Foreground="MediumVioletRed" />
                                                </CheckBox>
                                                <CheckBox Margin="6,0,0,0" x:Name="chkSalesRep"
											  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=SalesRepresentative, Mode=TwoWay}">
                                                    <Label Content="{lex:Loc SalesRepresentative}" Style="{StaticResource generic_Label}" />
                                                </CheckBox>
                                            </StackPanel>
                                        </Border>
                                    </Popup>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource TrueToFalse}}">
                                    <Label Content="" Style="{StaticResource btn_Label}" />
                                    <TextBlock Margin="5,0" VerticalAlignment="Center">
										<Hyperlink PreviewMouseUp="Print_Click">
											<Run Text="{lex:Loc Document}" />
										</Hyperlink>
                                    </TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="" Style="{StaticResource btn_Label}" />
                                    <TextBlock Margin="5,0" VerticalAlignment="Center">
										<Hyperlink PreviewMouseUp="Order_Click">
											<Run Text="{lex:Loc SalesOrder}" />
										</Hyperlink>
                                    </TextBlock>
                                </StackPanel>
                                <Label Content="{lex:Loc QuickLook}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                                <StackPanel IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                                    <StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=AvailableCredit, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <Label Content="X" FontSize="16" FontFamily="/Cognitivo;component/Resources/#cognitivo" />
                                        <TextBlock Style="{StaticResource text_Label}" >
                                            <Hyperlink Click="CheckCredit">
                                                <Run Text="{lex:Loc AvailableCredit}"/>
                                            </Hyperlink>
                                        </TextBlock>
                                        <TextBlock Text="{Binding /contact.credit_availability, Mode=TwoWay, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource text_Data}" />
                                        <TextBlock x:Name="tbCurrency" FontWeight="Medium" Style="{StaticResource text_Data}" Text="" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Telephone, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <Label Content="P" FontSize="16" FontFamily="/Cognitivo;component/Resources/#cognitivo" />
                                        <TextBlock Text="{lex:Loc Telephone}" Style="{StaticResource text_Label}" />
                                        <TextBlock Text="{Binding /contact.telephone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource text_Data}" />
                                    </StackPanel>
                                    <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesRepresentative, Converter={StaticResource BoolToVisibility},
											UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <Label Content="U" Style="{StaticResource ico_Label}" />
                                        <TextBlock Text="{lex:Loc Contact}" Style="{StaticResource text_Label}" />
                                        <ComboBox x:Name="cbxContactRelation" Style="{StaticResource ComboToLabelStyle}"
											  metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
											  metro:ControlsHelper.MouseOverBorderBrush="Silver"
											  DisplayMemberPath="name" Width="Auto"
											  SelectedValuePath="id_contact"
											  SelectedValue="{Binding id_contact, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_budgetViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                            <ComboBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel />
                                                </ItemsPanelTemplate>
                                            </ComboBox.ItemsPanel>
                                        </ComboBox>
                                    </StackPanel>
                                    <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesRepresentative, Converter={StaticResource BoolToVisibility},
											UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <Label Content="S" Style="{StaticResource ico_Label}" />
                                        <TextBlock Text="{lex:Loc Salesman}" Style="{StaticResource text_Label}" />
                                        <ComboBox x:Name="cbxSalesRep" Style="{StaticResource ComboToLabelStyle}"
											  metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
											  metro:ControlsHelper.MouseOverBorderBrush="Silver"
											  DisplayMemberPath="name" Width="Auto"
											  SelectedValuePath="id_sales_rep" ItemsSource="{Binding Source={x:Static entity:CurrentSession.SalesReps}}"
											  SelectedValue="{Binding id_sales_rep, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_budgetViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                            <ComboBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel />
                                                </ItemsPanelTemplate>
                                            </ComboBox.ItemsPanel>
                                        </ComboBox>
                                    </StackPanel>
                                    <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal"
											Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Branch, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <Label Content="" Style="{StaticResource ico_Label}" />
                                        <TextBlock Text="{lex:Loc Code}" Style="{StaticResource text_Label}" />
                                        <TextBox Text="{Binding code, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									 Style="{StaticResource TextToLabelStyle}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Project, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <Label Content="Y" FontSize="16" FontFamily="/Cognitivo;component/Resources/#cognitivo" />
                                        <TextBlock Text="{lex:Loc Project}" Style="{StaticResource text_Label}" />
                                        <Label Content="{Binding project.name, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" FontSize="16" Style="{StaticResource generic_Label}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="2" Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Branch, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <Label Content="" FontSize="16" FontFamily="/Cognitivo;component/Resources/#cognitivo" />
                                        <TextBlock Text="{lex:Loc Branch}" Style="{StaticResource text_Label}" />
                                        <ComboBox DisplayMemberPath="name" SelectedValuePath="id_branch" Width="Auto"
											  Style="{StaticResource ComboToLabelStyle}"
											  SelectedValue="{Binding id_branch, Source={StaticResource sales_budgetViewSource}, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											  ItemsSource="{Binding Source={x:Static entity:CurrentSession.Branches}}" />
                                    </StackPanel>

                                    <Label Content="{lex:Loc Date}" Style="{StaticResource input_label}" />

                                    <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" ToolTip="{lex:Loc ExpiryDate}">
                                        <Label Content="" Style="{StaticResource ico_Label}" />
                                        <DatePicker Style="{StaticResource input_datepicker}" Width="128"
												SelectedDate="{Binding expiry_date, Mode=TwoWay, NotifyOnValidationError=true,
												UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=true}" />
                                    </StackPanel>

                                    <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
												Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesLink, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                        <Label Content="" Style="{StaticResource ico_Label}" />
                                        <TextBlock Margin="5,0" Text="{lex:Loc Exports}" VerticalAlignment="Center" Style="{StaticResource text_Label}" />
                                        <CheckBox IsChecked="{Binding is_impex, IsAsync=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </StackPanel>

                                 
                                </StackPanel>
                                <StackPanel Margin="2" VerticalAlignment="Center">
                                    <TextBlock Text="Comment" Style="{StaticResource text_Label}" />
                                    <TextBox Width="Auto" TextWrapping="WrapWithOverflow" Margin="4,0" Height="64" HorizontalAlignment="Stretch" Text="{Binding comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </ScrollViewer>
            </Grid>
            <Rectangle Grid.Row="1" Fill="Silver" Height="1" Margin="32,0" VerticalAlignment="Top" />
            <Grid Grid.Row="1" Background="{StaticResource winBackground}">
                <Grid.Effect>
                    <DropShadowEffect Direction="90" Opacity="0.32" ShadowDepth="4" BlurRadius="12" />
                </Grid.Effect>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right">
                    <Controls:Totals GrandTotal="{Binding GrandTotal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={StaticResource sales_budgetViewSource}, StringFormat={}{0:N}}"
                                      Has_Rounding="{Binding ElementName=cbxCurrency,Path=HasRounding,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
											 Currency="{Binding app_currencyfx.app_currency.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											 DiscountPercentage="{Binding DiscountPercentage, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
											 DiscountValue="{Binding DiscountWithoutPercentage, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									 VerticalAlignment="Top" HorizontalAlignment="Right" />
                    <Popup x:Name="popupVAT" IsOpen="{Binding ElementName=lblVAT, Path=IsMouseOver, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										Placement="Top">
                        <DataGrid x:Name="dgvvat" AutoGenerateColumns="False" EnableRowVirtualization="True"
												RowDetailsVisibilityMode="VisibleWhenSelected" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding id_vat}" Header="ID" Width="SizeToHeader"
																Visibility="{Binding Source={x:Static mainpref:Settings.Default}, Path=Developer_Option, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                <DataGridTextColumn Binding="{Binding name}" Header="{lex:Loc Cognitivo:local:VAT}" Width="Auto" />
                                <DataGridTextColumn Binding="{Binding value, StringFormat={}{0:N}}" Header="{lex:Loc Cognitivo:local:Value}" Width="Auto" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </Popup>
                </StackPanel>
                <StackPanel IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                    <Label Content="{lex:Loc Items}" Style="{StaticResource input_label}" Width="250" HorizontalAlignment="Left" />
                    <Controls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="Item_Select" Type="All"
									  can_New="True" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}" />
                </StackPanel>
                <DataGrid x:Name="sales_budget_detailDataGrid" AutoGenerateColumns="False" Margin="0,58,0,0" EnableRowVirtualization="True" VerticalScrollBarVisibility="Auto"
						  IsReadOnly="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource TrueToFalse},
						  UpdateSourceTrigger=PropertyChanged, FallbackValue=false}" CanUserDeleteRows="False"
						  ItemsSource="{Binding Source={StaticResource sales_budgetsales_budget_detailViewSource}}"
						  RowDetailsVisibilityMode="VisibleWhenSelected" RowEditEnding="Sales_Budget_detailDataGrid_RowEditEnding"
						  CellEditEnding="Sales_Budget_detailDataGrid_CellEditEnding" Grid.ColumnSpan="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding id_sales_budget_detail, UpdateSourceTrigger=PropertyChanged}"
											Header="ID" Width="100" IsReadOnly="True"
											Visibility="{Binding Source={x:Static mainpref:Settings.Default}, Path=developer_Option, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged}" />
                        <DataGridTextColumn Binding="{Binding item.code, UpdateSourceTrigger=PropertyChanged}"
											Header="{lex:Loc Cognitivo:local:Code}" IsReadOnly="True" Width="100" />
                        <DataGridTextColumn Binding="{Binding item_description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											Header="{lex:Loc Cognitivo:local:Items}" Width="*" />
                        <DataGridComboBoxColumn Header="{lex:Loc Cognitivo:local:VAT}" Width="64"
												ItemsSource="{Binding Source={x:Static entity:CurrentSession.VAT_Groups}}"
												DisplayMemberPath="name" SelectedValuePath="id_vat_group"
												SelectedValueBinding="{Binding id_vat_group, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <DataGridTextColumn 
											Header="{lex:Loc Cognitivo:local:Quantity}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="quantity" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="QuantityDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Quantity_Factored, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N2}}"
										Header="Factor" Width="Auto" MinWidth="64" ElementStyle="{StaticResource RightAlignStyle}"
										Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=ShowFactorQty, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

                        <DataGridTextColumn 
											Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											Header="{lex:Loc Cognitivo:local:Price}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="unit_price" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                            <DataGridTextColumn.IsReadOnly>
                                <MultiBinding Converter="{StaticResource SalesBudgetPrice}">
                                    <Binding Path="unit_price" TargetNullValue="0" Mode="TwoWay" ></Binding>
                                    <Binding Source="{x:Static entity:CurrentSession.UserRole}" Path="see_cost"></Binding>
                                </MultiBinding>
                            </DataGridTextColumn.IsReadOnly>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding discount, StringFormat={}{0:N9}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											 Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" />

                        <!-- UnitPrice_Vat -->
                        <DataGridTextColumn 
											Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											Header="{lex:Loc Cognitivo:local:PricewithVAT}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="UnitPrice_Vat" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding DiscountVat, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" />

                        <!-- SubTotal -->
                        <DataGridTextColumn 
											Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											Header="{lex:Loc Cognitivo:local:SubTotal}" Width="Auto" IsReadOnly="True" ElementStyle="{StaticResource RightAlignStyle}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="SubTotal" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Discount_SubTotal, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" />

                        <!-- SubTotal_VAT -->
                        <DataGridTextColumn 
											Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											Header="{lex:Loc Cognitivo:local:SubTotalwithVAT}" Width="Auto" IsReadOnly="True" ElementStyle="{StaticResource RightAlignStyle}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="SubTotal_Vat" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Discount_SubTotal_Vat, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											 Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" IsReadOnly="True" />

                        <DataGridTemplateColumn Width="Auto" Header="">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Command="customcmd:CustomCommands.Delete"
													Style="{StaticResource btnDeleteChildStyle}"
													CommandParameter="{Binding}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <Grid Background="WhiteSmoke" Margin="4" IsEnabled="False">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">

                                    <StackPanel>
                                        <Label Style="{StaticResource H1}" Content="{Binding item.name, FallbackValue=Expense}" />
                                        <Label Style="{StaticResource H3}" Content="{Binding item.code}" />
                                    </StackPanel>
                                    <StackPanel Visibility="{Binding item,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ExpireDate2Visible}}">
                                        <Label Content="{lex:Loc LotNumber}" Style="{StaticResource input_label}" />
                                        <TextBox Style="{StaticResource input_textbox}"
						 Text="{Binding batch_code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                        <Label Content="{lex:Loc Date}" Style="{StaticResource input_label}" />
                                        <DatePicker x:Name="expiry_dateDatePicker" Style="{StaticResource input_datepicker}"
								SelectedDate="{Binding expire_date, Mode=TwoWay, NotifyOnValidationError=true,
								ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
                </DataGrid>
            </Grid>
        </Grid>

        <cntrl:toolBar x:Name="toolBar" VerticalAlignment="Top" btnSearch_Click="Search_Click"
					   btnNew_Click="New_Click" appName="SalesBudget"
					   btnSave_Click="Save_Click"
					   btnDelete_Click="Delete_Click"
					   btnCancel_Click="Cancel_Click"
					   btnEdit_Click="Edit_Click"
					   btnApprove_Click="Approve_Click"
					   btnAnull_Click="Anull_Click"
                       btnSync_Click="Page_Loaded"
                       btnSearchInSource_Click="SearchInSource_Click"
					   Grid.ColumnSpan="2"
                        btnFocus_Click="toolBar_btnFocus_Click"
                       btnClear_Click="toolBar_btnClear_Click"
                       ref_id="{Binding id_sales_budget,Source={StaticResource sales_budgetViewSource}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
					   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
					   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

        <Grid Name="crud_modal" Background="#7FC0C0C0" Visibility="Hidden" Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5" />
    </Grid>
</Page>