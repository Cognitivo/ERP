<Page x:Class="Cognitivo.Sales.Invoice" Title="{lex:Loc SalesInvoice}" x:Name="this"
	  xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:pref="clr-namespace:Cognitivo.Sales"
      xmlns:mainpref="clr-namespace:Cognitivo.Properties"
      xmlns:entity="clr-namespace:entity;assembly=entity"
	  xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
      xmlns:Salescontroller="clr-namespace:entity.Controller.Sales;assembly=entity"
      xmlns:converter="clr-namespace:Cognitivo.Converters"
	  xmlns:customcmd="clr-namespace:Cognitivo.Class"
	  xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"
      xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
		  xmlns:lex="http://wpflocalizeextension.codeplex.com"
		  lex:LocalizeDictionary.DesignCulture="en-US"
		  lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo"
		  lex:ResxLocalizationProvider.DefaultDictionary="local"
	  mc:Ignorable="d"
	  MinHeight="550" MinWidth="800" Loaded="SalesInvoice_Loaded">
    <Page.CommandBindings>
        <!--<CommandBinding x:Name="DeleteCommand" Command="customcmd:CustomCommands.Delete"
						CanExecute="DeleteCommandBinding_CanExecute"
						Executed="DeleteCommandBinding_Executed" />-->
    </Page.CommandBindings>
    <Page.Resources>
        <Salescontroller:InvoiceController x:Key="SalesInvoice"/>
        <converter:Bool2Color x:Key="Bool2Color" />
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <converter:Status2Enable x:Key="Status2Enable" />
        <converter:ExpireDate2Visible x:Key="ExpireDate2Visible" />
        <converter:IsActive2ColorConverter x:Key="ActiveValueConverter" />
        <converter:TrueToFalseConverter x:Key="TrueToFalse" />
        <converter:ToStringFormatConverter x:Key="ToStringFormatConverter" />
        <converter:DecimalFormat x:Key="DecimalFormat"/>
        <CollectionViewSource x:Key="sales_invoiceViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:sales_invoice}, CreateList=True}" />
        <CollectionViewSource x:Key="sales_invoicesales_invoice_detailViewSource" Source="{Binding sales_invoice_detail, Source={StaticResource sales_invoiceViewSource}}" />
        <CollectionViewSource x:Key="sales_invoicesales_invoice_detailsales_packinglist_relationViewSource" Source="{Binding sales_packinglist_relation, Source={StaticResource sales_invoicesales_invoice_detailViewSource}}" />
    </Page.Resources>
    <Grid DataContext="{StaticResource sales_invoiceViewSource}" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid Name="crud_modalExpire" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden"
			  Grid.RowSpan="3" Grid.ColumnSpan="2" Panel.ZIndex="5" IsVisibleChanged="crud_modalExpire_IsVisibleChanged" />
        <!-- CRUD Modal -->
        <Grid Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}" Visibility="Collapsed"
				  Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5" />
        <Grid Name="crud_modalAnull" Background="{StaticResource Modal_BackgroundColor}" Visibility="Collapsed"
				  Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5" />
        <Grid Name="crud_modalDuePaymnet" Background="{StaticResource Modal_BackgroundColor}" Visibility="Collapsed"
						  Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Background="RoyalBlue">
                    <Label FontFamily="/cntrl;component/Resources/#cognitivo" Content="$" FontSize="25" Margin="8,0"
									   VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="Gray" />
                    <TextBlock x:Name="lblTitle" Text="{lex:Loc DuePayment}" FontSize="25" Margin="40,3,0,0" Foreground="White" />
                    <Polygon HorizontalAlignment="Right" Points="-24,0,0,0,0,24"
										 Fill="{Binding is_active, Converter={StaticResource ActiveValueConverter}}" />
                    <Label x:Name="lblCancel" Content="c" FontSize="18" VerticalAlignment="Center" Margin="5"
									   HorizontalAlignment="Right" MouseDown="Cancel_MouseDown" Foreground="White"
									   FontFamily="/cntrl;component/Resources/#cognitivo" Cursor="Hand" />
                </Grid>
                <DataGrid x:Name="payment_schedualDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" IsReadOnly="True"
									  RowDetailsVisibilityMode="VisibleWhenSelected"  CanUserAddRows="False" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding CustName}"
														Header="{lex:Loc Cognitivo:local:Customer}" Width="auto" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding AccountReceivableBalance,StringFormat={}{0:N}}"
														Header="{lex:Loc Cognitivo:local:AccountsReceivable}" Width="auto" IsReadOnly="True"
														ElementStyle="{StaticResource RightAlignStyle}" />
                        <DataGridTextColumn Binding="{Binding Currency}"
														Header="{lex:Loc Cognitivo:local:Currency}" Width="auto" IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
        <!-- Navigation ListBox -->
        <ListBox x:Name="sales_invoiceDataGrid" Style="{StaticResource nav_List}"
							 ScrollViewer.VerticalScrollBarVisibility="Auto"
							 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
							 ItemContainerStyle="{StaticResource nav_ListSelection}"
                             Margin="0,0,0,35.5"
							 ItemsSource="{Binding}" Grid.Row="1" SelectionChanged="Invoice_SelectionChanged">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling"
											   recordCode="{Binding trans_date, StringFormat=d, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
											   recordSecondaryName="{Binding number, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
											   recordName="{Binding contact.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
											   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
											   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" CheckedChanged="navList_CheckedChanged" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <syncfusion:SfDataPager x:Name="dataPager" Foreground="White" HorizontalContentAlignment="Center" VerticalAlignment="Bottom" Grid.Row="1" PageSize="5"
                                Background="{StaticResource AccentColor_Brush}" UseOnDemandPaging="True" PagedSource="{Binding}" OnDemandLoading="dataPager_OnDemandLoading" Height="36" Margin="0,0,0,-0.5"/>
        <!-- Sales Invoice Form -->
        <Grid Grid.Column="1" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="340" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}">
                        <Label Content="{lex:Loc Date}" Style="{StaticResource input_label}" />
                        <DatePicker x:Name="dtpTrans_Date" 
												metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
												metro:ControlsHelper.MouseOverBorderBrush="Silver"
												SelectedDate="{Binding trans_date, StringFormat=d, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <Grid>
                            <Label Content="{lex:Loc Customer}"  Style="{StaticResource input_label}" />
                        </Grid>
                        <Controls:SmartBox_Contact x:Name="sbxContact" Get_Customers="True" Get_Employees="False" CanCreate="True"
															   Select="Set_ContactPref" Text="{Binding contact.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        <StackPanel Visibility="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                            <Label Content="{lex:Loc Document}" Style="{StaticResource input_label}" />
                            <ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range"
											  metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
											  metro:ControlsHelper.MouseOverBorderBrush="Silver"
											  Style="{StaticResource input_combobox}"  SelectedItem="{Binding app_document_range, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
											  SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                        </StackPanel>

                        <Label Content="{lex:Loc InvoiceNumber}" Style="{StaticResource input_label}" />
                        <TextBox metro:TextBoxHelper.Watermark="{Binding NumberWatermark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{StaticResource input_textbox}"
											 metro:TextBoxHelper.SelectAllOnFocus="True"
											 metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
											 metro:ControlsHelper.MouseOverBorderBrush="Silver"
											 Text="{Binding number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />

                        <Label Content="{lex:Loc Condition}"  Style="{StaticResource input_label}" />
                        <ComboBox x:Name="cbxCondition" Style="{StaticResource input_combobox}" DisplayMemberPath="name"
											  metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
											  ItemsSource="{Binding Source={x:Static entity:CurrentSession.Conditions}}"
											  metro:ControlsHelper.MouseOverBorderBrush="Silver"
											  SelectedValue="{Binding id_condition, Mode=TwoWay, NotifyOnValidationError=True,
											  Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											  SelectedValuePath="id_condition" Grid.Row="1" SelectionChanged="Condition_SelectionChanged">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>

                        <Label Content="{lex:Loc Contract}" Style="{StaticResource input_label}" />
                        <ComboBox Style="{StaticResource input_combobox}" DisplayMemberPath="name"
											  metro:ControlsHelper.FocusBorderBrush="RoyalBlue" ItemsSource="{Binding Source={x:Static entity:CurrentSession.Contracts}}"
											  metro:ControlsHelper.MouseOverBorderBrush="Silver"
											  SelectedValuePath="id_contract" x:Name="cbxContract"
											  SelectedValue="{Binding id_contract, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>

                        <Label Content="{lex:Loc Currency}" Style="{StaticResource input_label}" />
                        <Controls:CurrencyBox x:Name="cbxCurrency" appName="SalesInvoice"
										  SelectedValue="{Binding id_currencyfx, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
										  LostFocus="Currency_LostFocus" />
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <Label Content="{lex:Loc Information}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                        <StackPanel Orientation="Horizontal" Margin="4,0"
												Visibility="{Binding is_accounted, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisibility}}">
                            <Label Content="j" Style="{StaticResource ico_Label}" Foreground="Green" FontSize="11" />
                            <TextBlock Text="{lex:Loc Accounted}" Style="{StaticResource text_Label}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="U" Style="{StaticResource ico_Label}" Foreground="Green" FontSize="11" />
                            <TextBlock Text="{Binding security_user.name, FallbackValue=User,  Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource text_Label}" />
                        </StackPanel>
                        <Label Content="{lex:Loc QuickActions}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                        <StackPanel x:Name="stackpnlCustomize" Margin="3,2,0,5">
                            <StackPanel Orientation="Horizontal"  Margin="3,2,0,0">
                                <Label Content="A" Style="{StaticResource btn_Label}" />
                                <TextBlock MouseUp="tbCustomize_MouseUp" VerticalAlignment="Center">
									<Hyperlink x:Name="hrefCustomize">
										<Run Text="{lex:Loc Customize}" />
									</Hyperlink>
                                </TextBlock>
                                <Popup x:Name="popupCustomize" IsOpen="False" Closed="popupCustomize_Closed"
												   PlacementTarget="{Binding ElementName=stackpnlCustomize}" Placement="Mouse">
                                    <Border BorderThickness="1" BorderBrush="Gray">
                                        <StackPanel Background="WhiteSmoke" Width="180">
                                            <Label Content="{lex:Loc Header}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                                            <WrapPanel>
                                                <TextBox Width="30" HorizontalAlignment="Left"
																	 Text="{Binding Source={x:Static pref:Settings.Default}, Path=TransDate_Offset, Mode=TwoWay}" Margin="6,2,2,2" />
                                                <Label Content="{lex:Loc DifferenceinDate}" Style="{StaticResource generic_Label}" />
                                            </WrapPanel>
                                            <Label Content="{lex:Loc Details}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                                            <CheckBox Margin="6,0,0,0" x:Name="chkPriceWithVAT"
																  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Mode=TwoWay}">
                                                <Label Content="{lex:Loc VATIncluded}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkPriceWithoutVAT"
													  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Mode=TwoWay}">
                                                <Label Content="{lex:Loc VATExcluded}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkDiscount"
																  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Discount_OnUnitValue, Mode=TwoWay}">
                                                <Label Content="{lex:Loc UnitValue}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <WrapPanel>
                                                <ComboBox Width="64" HorizontalAlignment="Left" ItemsSource="{Binding Source={x:Static pref:Settings.Default}, Path=Discount_OnUnitValue, Mode=TwoWay}"
																	  Margin="6,2,2,2" />
                                                <Label Content="{lex:Loc Discount}" Style="{StaticResource generic_Label}" />
                                            </WrapPanel>
                                            <Label Content="{lex:Loc QuickLook}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                                            <CheckBox Margin="6,0,0,0" x:Name="chkAvailCredit"
																  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=AvailableCredit, Mode=TwoWay}">
                                                <Label Content="{lex:Loc AvailableCredit}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkField"
																  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Telephone, Mode=TwoWay}">
                                                <Label Content="{lex:Loc Telephone}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkSalesOrder"
																  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=SalesLink, Mode=TwoWay}">
                                                <Label Content="{lex:Loc SalesOrder}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkSalesRep"
																  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=SalesRepresentative, Mode=TwoWay}">
                                                <Label Content="{lex:Loc SalesRepresentative}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkProject"
																  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Project, Mode=TwoWay}">
                                                <Label Content="{lex:Loc Project}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkBranch"
													  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Branch, Mode=TwoWay}">
                                                <Label Content="{lex:Loc Branch}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkCode"
													  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=Code, Mode=TwoWay}">
                                                <Label Content="{lex:Loc Code}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkDeveloper"
													  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=DeveloperMode, Mode=TwoWay}">
                                                <Label Content="{lex:Loc DeveloperMode}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkDuplicateItem"
													  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=AllowDuplicateItem, Mode=TwoWay}">
                                                <Label Content="{lex:Loc AllowDuplicateItem}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkfilterbyBranch"
													  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=FilterByBranch, Mode=TwoWay}">
                                                <Label Content="{lex:Loc FilterByBranch}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <!--<CheckBox Margin="6,0,0,0" x:Name="chkDiscountStock"
													  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=DiscountStock, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                            <Label Content="{lex:Loc DiscountStock}" Style="{StaticResource generic_Label}" />
                                                        </CheckBox>-->
                                            <CheckBox Margin="6,0,0,0" x:Name="chkspiltInvoice"
													  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=BlockExcessItem, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                <Label Content="{lex:Loc BlockExcessItem}" Style="{StaticResource generic_Label}" />
                                            </CheckBox>
                                            <CheckBox Margin="6,0,0,0" x:Name="chkshowconversion"
										  IsChecked="{Binding Source={x:Static pref:Settings.Default}, Path=ShowFactorQty, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                <Label Content="Show Purchase Detail" Foreground="MediumVioletRed" />
                                            </CheckBox>
                                            <StackPanel>
                                                <Label Content="{lex:Loc Decimal}" Style="{StaticResource generic_Label}" />
                                                <Slider Minimum="0" Maximum="9" TickFrequency="1" TickPlacement="Both" IsSnapToTickEnabled="True"
                                                        Value="{Binding Source={x:Static
                                                    mainpref:Settings.Default}, 
                                                    Path=QuantityDecimalStringFormat,
                                                    Mode=TwoWay,
                                                    UpdateSourceTrigger=PropertyChanged,Converter={StaticResource DecimalFormat}
                                                    }"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="3,0,0,0"
													IsEnabled="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                <Label Content="$" Style="{StaticResource btn_Label}" />
                                <TextBlock Margin="5,0" VerticalAlignment="Center">
												<Hyperlink PreviewMouseUp="RecivePayment_PreviewMouseUp">
													<Run Text="{lex:Loc Payment}" />
												</Hyperlink>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="3,0,0,0"
													IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="$" Style="{StaticResource btn_Label}" />
                                <TextBlock Margin="5,0" VerticalAlignment="Center">
												<Hyperlink PreviewMouseUp="AccountsRecievable_PreviewMouseUp">
													<Run Text="{lex:Loc AccountsReceivable}" />
												</Hyperlink>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="3,0,0,0"
													IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="$" Style="{StaticResource btn_Label}" />
                                <TextBlock Margin="5,0" VerticalAlignment="Center">
												<Hyperlink PreviewMouseUp="Refinance_PreviewMouseUp">
													<Run Text="{lex:Loc Refinance}" />
												</Hyperlink>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="" Style="{StaticResource btn_Label}" />
                                <TextBlock Margin="5,0" VerticalAlignment="Center"><Hyperlink PreviewMouseUp="Print_Click"><Run Text="{lex:Loc Document}" /></Hyperlink></TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="" Style="{StaticResource btn_Label}" />
                                <TextBlock Margin="5,0" VerticalAlignment="Center"><Hyperlink PreviewMouseUp="Movement_Print"><Run Text="{lex:Loc Movement Print}" /></Hyperlink></TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="" Style="{StaticResource btn_Label}" />
                                <TextBlock Margin="5,0" VerticalAlignment="Center">
										<Hyperlink PreviewMouseUp="Return_Click">
											<Run Text="{lex:Loc SalesReturn}" />
										</Hyperlink>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" 
                                        IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged}"
									    Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesLink, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="" Style="{StaticResource btn_Label}" />
                                <TextBlock Margin="5,0" VerticalAlignment="Center" Style="{StaticResource text_Label}">
									<Hyperlink PreviewMouseUp="SalesOrder_Click">
										<Run Text="{lex:Loc SalesOrder}" />
									</Hyperlink>
                                </TextBlock>
                            </StackPanel>

                            <ItemsControl ItemsSource="{Binding Source={StaticResource sales_invoicesales_invoice_detailViewSource}}">
                                <!-- host the items generated by this ItemsControl in a grid -->
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <!-- render each bound item using a TextBlock-->
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock VerticalAlignment="Top" Margin="5,0"  Style="{StaticResource text_Label}">
															<Hyperlink PreviewMouseUp="salesorder_PreviewMouseUp" Tag="{Binding sales_order_detail.sales_order}">
																<Run Text="{Binding sales_order_detail.sales_order.number}" />
															</Hyperlink>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="" Style="{StaticResource btn_Label}" />
                                <TextBlock Margin="5,0" VerticalAlignment="Center" Style="{StaticResource text_Label}">
									<Hyperlink PreviewMouseUp="PackingList_Click">
										<Run Text="{lex:Loc PackingList}" />
									</Hyperlink>
                                </TextBlock>
                            </StackPanel>

                            <ItemsControl  ItemsSource="{Binding Source={StaticResource sales_invoicesales_invoice_detailsales_packinglist_relationViewSource}}" Margin="0">
                                <!-- host the items generated by this ItemsControl in a grid -->
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <!-- render each bound item using a TextBlock-->
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock VerticalAlignment="Top" Margin="5,0"  Style="{StaticResource text_Label}">
														<Hyperlink PreviewMouseUp="salespackinglist_PreviewMouseUp" Tag="{Binding sales_packing_detail.sales_packing}">
															<Run  Text="{Binding sales_packing_detail.sales_packing.number}" />
														</Hyperlink>
                                        </TextBlock>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                        <Label Content="{lex:Loc QuickLook}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                        <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center">
                            <Label Content="Z" Style="{StaticResource ico_Label}" />
                            <CheckBox Content="{lex:Loc Details}" Checked="chbxRowDetail_Checked" Unchecked="chbxRowDetail_Checked" />
                        </StackPanel>
                        <StackPanel Grid.Column="0" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged}">
                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
													Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=AvailableCredit, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="X" Style="{StaticResource ico_Label}" />
                                <TextBlock Style="{StaticResource text_Label}" >
                                                <Hyperlink Click="CheckCredit">
                                                    <Run Text="{lex:Loc AvailableCredit}"/>
                                                </Hyperlink>
                                </TextBlock>
                                <TextBlock Text="{Binding contact.credit_availability, Mode=OneWay,
													   UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Style="{StaticResource text_Data}" />
                            </StackPanel>

                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
													Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Telephone, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="P" Style="{StaticResource ico_Label}" />
                                <TextBlock Style="{StaticResource text_Label}" Text="{lex:Loc Telephone}" />
                                <TextBlock Text="{Binding contact.telephone,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource text_Data}" />
                            </StackPanel>
                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center">
                                <Label Content="R" Style="{StaticResource ico_Label}" />
                                <TextBlock Text="{lex:Loc Contact}" Style="{StaticResource text_Label}" />
                                <ComboBox x:Name="cbxContactRelation" Style="{StaticResource ComboToLabelStyle}"
										  metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
										  metro:ControlsHelper.MouseOverBorderBrush="Silver"
										  DisplayMemberPath="name" Width="Auto"
										  SelectedValuePath="id_contact"
										  SelectedValue="{Binding id_contact, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center" Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesRepresentative, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="S" Style="{StaticResource ico_Label}" />
                                <TextBlock Text="{lex:Loc Salesman}" Style="{StaticResource text_Label}" />
                                <ComboBox x:Name="cbxSalesRep" Style="{StaticResource ComboToLabelStyle}"
													metro:ControlsHelper.FocusBorderBrush="RoyalBlue" ItemsSource="{Binding Source={x:Static entity:CurrentSession.SalesReps}}"
													metro:ControlsHelper.MouseOverBorderBrush="Silver"
													DisplayMemberPath="name" Width="Auto"
													SelectedValuePath="id_sales_rep"
													SelectedValue="{Binding id_sales_rep, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center">
                                <Label Content="" Style="{StaticResource ico_Label}" />
                                <TextBlock Text="{lex:Loc Type}" Style="{StaticResource text_Label}" />
                                <ComboBox Name="cbxTransType" Grid.Column="1" Style="{StaticResource ComboToLabelStyle}"
													  SelectedValue="{Binding trans_type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
																			  ValidatesOnExceptions=True, NotifyOnValidationError=True,
																			  ValidatesOnDataErrors=True}" />
                            </StackPanel>

                            <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center"
									                Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=SalesLink, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="" Style="{StaticResource ico_Label}" />
                                <TextBlock Margin="5,0" Text="{lex:Loc Exports}" VerticalAlignment="Center" Style="{StaticResource text_Label}" />
                                <CheckBox IsChecked="{Binding is_impex,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>

                            <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal"
													Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Code, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="" Style="{StaticResource ico_Label}" />
                                <TextBlock Text="{lex:Loc Code}" Style="{StaticResource text_Label}" />
                                <TextBox Text="{Binding code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
													 Style="{StaticResource TextToLabelStyle}" />
                            </StackPanel>
                            <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal"
													Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Branch, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <Label Content="" Style="{StaticResource ico_Label}" />
                                <TextBlock Text="{lex:Loc Branch}" Style="{StaticResource text_Label}" />
                                <ComboBox Width="Auto" Margin="0" x:Name="cbxBranch" Style="{StaticResource ComboToLabelStyle}"
													  metro:ControlsHelper.FocusBorderBrush="RoyalBlue" ItemsSource="{Binding Source={x:Static entity:CurrentSession.Branches}}"
													  metro:ControlsHelper.MouseOverBorderBrush="Silver"
													  DisplayMemberPath="name" SelectedValuePath="id_branch"  SelectionChanged="Branch_SelectionChanged"
													  SelectedValue="{Binding id_branch, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal" Visibility="Collapsed">
                                <Label Content="" Style="{StaticResource ico_Label}" />
                                <TextBlock Text="{lex:Loc Terminal}" Style="{StaticResource text_Label}" />
                                <ComboBox x:Name="cbxTerminal" Width="Auto" Margin="0"  Style="{StaticResource ComboToLabelStyle}"
													  metro:ControlsHelper.FocusBorderBrush="RoyalBlue" ItemsSource="{Binding Source={x:Static entity:CurrentSession.Terminals}}"
													  metro:ControlsHelper.MouseOverBorderBrush="Silver"
													  DisplayMemberPath="name" SelectedValuePath="id_terminal"
													  SelectedValue="{Binding id_terminal, Mode=TwoWay, NotifyOnValidationError=True, Source={StaticResource sales_invoiceViewSource}, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2"
									   Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=Project, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            <Label Content="Y" Style="{StaticResource ico_Label}" />
                            <TextBlock Text="{lex:Loc Project}" Style="{StaticResource text_Label}" />
                            <Label Content="{Binding project.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource generic_Label}" />
                        </StackPanel>
                        <StackPanel VerticalAlignment="Center" Margin="2">
                            <Label Content="{lex:Loc Comment}" Style="{StaticResource input_label}" />
                            <TextBox x:Name="commentTextBox" Text="{Binding comment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MinHeight="64"
								 Style="{StaticResource input_textbox}" HorizontalAlignment="Stretch" Width="Auto" TextWrapping="Wrap" />
                        </StackPanel>
                    </StackPanel>
                  
                    <!--sidepanel-->
                </Grid>
            </ScrollViewer>

            <Grid Grid.ColumnSpan="2" Grid.Row="2" ScrollViewer.VerticalScrollBarVisibility="Auto" Background="{StaticResource winBackground}">
                <Grid.Effect>
                    <DropShadowEffect Direction="90" Opacity="0.32" ShadowDepth="4" BlurRadius="12" />
                </Grid.Effect>
                <Rectangle Height="0.7" Fill="Black" VerticalAlignment="Top" Margin="8,0" />
                <StackPanel VerticalAlignment="Top" Margin="8,0" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}"
										Visibility="{Binding ElementName=toolBar, Path=IsEditable, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                    <Label Content="{lex:Loc Items}" Style="{StaticResource input_label}" Margin="0,0,444,0" />
                    <Controls:SmartBox_Item x:Name="sbxItem" HorizontalAlignment="Left" Width="256" Height="26" Select="Item_Select"
														QuantityIntegration="True"  Type="InStock_wServices"
                                                        IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}" />
                </StackPanel>

                <Controls:Totals GrandTotal="{Binding GrandTotal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={StaticResource sales_invoiceViewSource}}"
                                             Has_Rounding="{Binding ElementName=cbxCurrency, Path=HasRounding, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
											 Currency="{Binding app_currencyfx.app_currency.code, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
											 DiscountPercentage="{Binding DiscountPercentage, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
											 DiscountValue="{Binding DiscountWithoutPercentage, StringFormat={}{0:N}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											 VerticalAlignment="Top" HorizontalAlignment="Right" />

                <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,10,0,0">
                    <Popup x:Name="popupVAT" Placement="Top">
                        <Grid Background="{StaticResource AccentColor_Introvert}">
                            <DataGrid x:Name="dgvVAT" AutoGenerateColumns="False" EnableRowVirtualization="True" Margin="4"
										  RowDetailsVisibilityMode="VisibleWhenSelected" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding name}" Width="Auto"
														Header="{lex:Loc Cognitivo:local:Name}" />
                                    <DataGridTextColumn Binding="{Binding value, StringFormat={}{0:N}}"
														Header="{lex:Loc Cognitivo:local:Value}" Width="Auto" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Popup>
                </StackPanel>

                <DataGrid x:Name="dgvSalesDetail" Style="{StaticResource detail_Datagrid}" Margin="5,58,0,0" HorizontalAlignment="Left"
									  IsReadOnly="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource TrueToFalse},
														   UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
									  CanUserAddRows="False" CanUserDeleteRows="False"
									  ItemsSource="{Binding Source={StaticResource sales_invoicesales_invoice_detailViewSource}}"
									  InitializingNewItem="Detail_InitializingNewItem"
									  RowEditEnding="Detail_RowEditEnding" RowDetailsVisibilityMode="Collapsed"
									  CellEditEnding="Detail_CellEditEnding">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow" BasedOn="{StaticResource MetroDataGridRow}">
                            <Setter Property="Foreground" Value="{Binding InStock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Bool2Color}}" />
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding id_sales_invoice_detail, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"
														Header="{lex:Loc Cognitivo:local:Code}" IsReadOnly="True" />
                        <DataGridComboBoxColumn x:Name="cbxLocation" Header="{lex:Loc Cognitivo:local:Location}" SelectedValueBinding="{Binding id_location,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
															DisplayMemberPath="name" SelectedValuePath="id_location" />
                        <DataGridTextColumn Binding="{Binding item.code, UpdateSourceTrigger=PropertyChanged}"
														Header="{lex:Loc Cognitivo:local:Code}" IsReadOnly="True" Width="100" />
                        <DataGridTextColumn Binding="{Binding item_description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
														Header="{lex:Loc Cognitivo:local:Items}"
                                                        IsReadOnly="{Binding Source={x:Static entity:CurrentSession.Allow_UpdateSalesDetail}, Converter={StaticResource TrueToFalse}}"
                                                        MinWidth="128" />
                        <!--remove the binding becuase don't want to refresh the source at middle of invoice-->
                        <DataGridComboBoxColumn Header="{lex:Loc Cognitivo:local:VAT}" Width="50"
														x:Name="cbxVat"
															DisplayMemberPath="name" SelectedValuePath="id_vat_group" 
                                                           SelectedValueBinding="{Binding id_vat_group, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True,
															UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                            IsReadOnly="{Binding Source={x:Static entity:CurrentSession.Allow_UpdateSalesDetail}, Converter={StaticResource TrueToFalse}}" />
                        <DataGridTextColumn 
														Header="{lex:Loc Cognitivo:local:Quantity}" Width="100" ElementStyle="{StaticResource RightAlignStyle}">
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="quantity" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="QuantityDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Quantity_Factored, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N2}}"
										Header="Factor" Width="Auto" MinWidth="64" ElementStyle="{StaticResource RightAlignStyle}"
										Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=ShowFactorQty, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <!--UnitCost-->
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Cost}" Width="100"
														ElementStyle="{StaticResource RightAlignStyle}"
													
														Visibility="{Binding Source={x:Static entity:CurrentSession.UserRole},Path=see_cost, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="unit_cost" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <!-- UnitPrice -->
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Price}" Width="100"
														ElementStyle="{StaticResource RightAlignStyle}"
                                                        IsReadOnly="{Binding Source={x:Static entity:CurrentSession.Allow_UpdateSalesDetail}, Converter={StaticResource TrueToFalse}}"
														Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="unit_price" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Discount}" Width="100"
														ElementStyle="{StaticResource RightAlignStyle}"
                                                        IsReadOnly="{Binding Source={x:Static entity:CurrentSession.Allow_UpdateSalesDetail}, Converter={StaticResource TrueToFalse}}"
														Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="discount" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>

                       



                        <!-- UnitPrice_Vat -->
                        <DataGridTextColumn 
														Header="{lex:Loc Cognitivo:local:PricewithVAT}" ElementStyle="{StaticResource RightAlignStyle}" Width="Auto"
														IsReadOnly="{Binding Source={x:Static entity:CurrentSession.Allow_UpdateSalesDetail}, Converter={StaticResource TrueToFalse}}"
                                                        Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="UnitPrice_Vat" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding DiscountVat,Mode=TwoWay, StringFormat={}{0:N}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
														IsReadOnly="{Binding Source={x:Static entity:CurrentSession.Allow_UpdateSalesDetail}, Converter={StaticResource TrueToFalse}}"
                                                        Header="{lex:Loc Cognitivo:local:Discount}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" Foreground="Crimson"
														Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                        <!-- SubTotal -->
                        <DataGridTextColumn 
														Header="{lex:Loc Cognitivo:local:SubTotal}" Width="Auto" IsReadOnly="True"
														Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility},
														UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" ElementStyle="{StaticResource RightAlignStyle}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="SubTotal" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:DiscountSubtotal}" Width="100"
														ElementStyle="{StaticResource RightAlignStyle}"
                                                        IsReadOnly="True"
														Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="Discount_SubTotal" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                    

                        <!-- SubTotal_VAT -->
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:SubTotalwithVAT}"
														Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATIncluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
														Width="Auto" IsReadOnly="True" ElementStyle="{StaticResource RightAlignStyle}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="SubTotal_Vat" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn  Header="{lex:Loc Cognitivo:local:VAT}"
														Width="Auto" IsReadOnly="True" ElementStyle="{StaticResource RightAlignStyle}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="Total_Vat" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:DiscountSubtotalVat}" Width="100"
														ElementStyle="{StaticResource RightAlignStyle}"
                                                        IsReadOnly="True"
														Visibility="{Binding Source={x:Static pref:Settings.Default}, Path=VATExcluded, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" >
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged"  
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                    <Binding Path="Discount_SubTotal_Vat" TargetNullValue="" Mode="TwoWay" />
                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="CurrencyDecimalStringFormat" Mode="OneWay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>
                       
                        <DataGridTextColumn Binding="{Binding DiscountPercentage_SubTotal_Vat,Mode=TwoWay, StringFormat={}{0:P}, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
														Foreground="Crimson" Header="{lex:Loc Cognitivo:local:Percentage}" Width="Auto" ElementStyle="{StaticResource RightAlignStyle}" />
                        <DataGridTemplateColumn Width="Auto" Header="">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Command="customcmd:CustomCommands.Delete"
														Style="{StaticResource btnDeleteChildStyle}"
														CommandParameter="{Binding}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>

                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <Grid Background="WhiteSmoke" Margin="4" >
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <Grid Height="130" Width="130" AllowDrop="True" Background="White" Margin="4">
                                        <TextBlock Text="" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Gainsboro"
											                    FontFamily="/Cognitivo;component/Resources/#cognitivo" FontSize="64" FontStyle="Normal" />
                                        <Image x:Name="imageViewer" Margin="4" />
                                    </Grid>
                                    <StackPanel>
                                        <Label Style="{StaticResource H1}" Content="{Binding item.name, FallbackValue=Expense}" />
                                        <Label Style="{StaticResource H3}" Content="{Binding item.code}" />
                                    </StackPanel>
                                    <StackPanel>
                                        <Label Content="{lex:Loc LotNumber}" Style="{StaticResource input_label}" />
                                        <TextBox Style="{StaticResource input_textbox}"
						                                    Text="{Binding batch_code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                        <Label Content="{lex:Loc Date}" Style="{StaticResource input_label}" />
                                        <DatePicker x:Name="expiry_dateDatePicker" Style="{StaticResource input_datepicker}"
								                            SelectedDate="{Binding expire_date, Mode=TwoWay, NotifyOnValidationError=true,
								                            ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
                </DataGrid>
            </Grid>
        </Grid>

        <cntrl:toolBar x:Name="toolBar" appName="SalesInvoice"
					   btnNew_Click="New_Click"
					   btnDelete_Click="Delete_Click"
					   btnSave_Click="Save_Click"
					   btnEdit_Click="Edit_Click"
					   btnSearch_Click="Search_Click"
					   btnSearchInSource_Click="SearchInSource_Click"
					   btnApprove_Click="Approve_Click"
					   btnAnull_Click="Anull_Click"
					   btnCancel_Click="Cancel_Click"
                       btnSync_Click="SalesInvoice_Loaded"
                       btnFocus_Click="btnFocus_Click"
                       btnClear_Click="toolBar_btnClear_Click"          
                       ref_id="{Binding id_sales_invoice,Source={StaticResource sales_invoiceViewSource}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
					   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
					   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
					   VerticalAlignment="Top" Grid.ColumnSpan="2" />
    </Grid>
</Page>