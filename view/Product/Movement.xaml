<Page x:Class="Cognitivo.Product.Movement" Title="{lex:Loc Movement}"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:entity="clr-namespace:entity;assembly=entity"
	xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
      xmlns:mainpref="clr-namespace:Cognitivo.Properties"
	xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"
       xmlns:customcmd="clr-namespace:Cognitivo.Class"
	mc:Ignorable="d"
	xmlns:converter="clr-namespace:Cognitivo.Converters"
	xmlns:lex="http://wpflocalizeextension.codeplex.com"
	lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo"
	lex:ResxLocalizationProvider.DefaultDictionary="local"
	lex:LocalizeDictionary.DesignCulture="en-US"
	d:DesignHeight="600" d:DesignWidth="800" Loaded="Page_Loaded">

    <Page.Resources>
        <converter:ToStringFormatConverter x:Key="ToStringFormatConverter" />
        <BooleanToVisibilityConverter x:Key="Bool2Visibility" />
        <converter:ExpireDate2Visible x:Key="ExpireDate2Visible" />
        <converter:TrueToFalseConverter x:Key="True2False" />
        <CollectionViewSource x:Key="contactViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:contact}, CreateList=True}" />
        <CollectionViewSource x:Key="itemViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item}, CreateList=True}" />
        <CollectionViewSource x:Key="item_transferViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_transfer}, CreateList=True}" />
        <CollectionViewSource x:Key="item_transferitem_transfer_detailViewSource" Source="{Binding item_transfer_detail, Source={StaticResource item_transferViewSource}}" />
        <CollectionViewSource x:Key="item_transferitem_transfer_detailitem_transfer_dimensionViewSource" Source="{Binding item_transfer_dimension, Source={StaticResource item_transferitem_transfer_detailViewSource}}" />

        <CollectionViewSource x:Key="branchViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_branch}, CreateList=True}" />
        <CollectionViewSource x:Key="location_destViewSource" Source="{Binding app_location, Source={StaticResource branchViewSource}}" />
        <CollectionViewSource x:Key="location_originViewSource" Source="{Binding app_location, Source={StaticResource branchViewSource}}" />
        <CollectionViewSource x:Key="app_statusViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:Status}, CreateList=True}" />
        <CollectionViewSource x:Key="security_userViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:security_user}, CreateList=True}" />
        <CollectionViewSource x:Key="app_dimensionViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_dimension}, CreateList=True}" />
        <CollectionViewSource x:Key="app_measurementViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_measurement}, CreateList=True}" />
    </Page.Resources>
    <Page.CommandBindings>
        <CommandBinding x:Name="DeleteCommand" Command="customcmd:CustomCommands.Delete" CanExecute="DeleteCommand_CanExecute" Executed="DeleteCommand_Executed" />
    </Page.CommandBindings>
    <Grid DataContext="{StaticResource item_transferViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid x:Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}"
			  Visibility="Hidden" Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5" />
        <Grid Name="crud_modalExpire" Background="{StaticResource Modal_BackgroundColor}" Visibility="Hidden"
			  Grid.RowSpan="3" Grid.ColumnSpan="2" Panel.ZIndex="5" IsVisibleChanged="crud_modalExpire_IsVisibleChanged" />
        <ListBox x:Name="item_transferDataGrid"
				 ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="1"
				 ScrollViewer.HorizontalScrollBarVisibility="Disabled"

				 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
				 ItemsSource="{Binding}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordName="{Binding number}" recordSecondaryName="{Binding trans_date}"
								   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
								   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid x:Name="MainGrid" Grid.Column="1" Grid.Row="1" Background="White" DataContext="{Binding}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="17*" />
                <ColumnDefinition Width="10*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="277" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel HorizontalAlignment="Center" IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}" Grid.Column="1" Margin="8,0,68,0" Width="264">
                <Label Content="{lex:Loc Date}" Style="{DynamicResource input_label}" HorizontalAlignment="Center" />
                <DatePicker Style="{StaticResource input_datepicker }"
							SelectedDate="{Binding trans_date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}" />

                <Label Content="{lex:Loc Document}" Style="{StaticResource input_label}" />
                <ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range"

								  metro:ControlsHelper.FocusBorderBrush="RoyalBlue" SelectedIndex="0"
								  metro:ControlsHelper.MouseOverBorderBrush="Silver"
								  Style="{StaticResource input_combobox}"
								  SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                <Label Content="{lex:Loc Number}" Style="{StaticResource input_label}" />
                <TextBox
								metro:TextBoxHelper.Watermark="{Binding NumberWatermark, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{StaticResource input_textbox}"
								metro:TextBoxHelper.SelectAllOnFocus="True"
								metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
								metro:ControlsHelper.MouseOverBorderBrush="Silver"
							 Text="{Binding number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                <StackPanel Orientation="Horizontal">
                    <StackPanel>
                        <Label Content="{lex:Loc Origin}" Style="{DynamicResource input_label}" />
                        <ComboBox x:Name="id_location_originComboBox" Grid.Column="1" DisplayMemberPath="name"
						  SelectedValuePath="id_location" Grid.Row="2" Width="111"
						  ItemsSource="{Binding Source={StaticResource location_originViewSource}}"
						  SelectedItem="{Binding app_location_origin,
												  Mode=TwoWay, ValidatesOnExceptions=True,ValidatesOnDataErrors=True,
												  NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
						  Style="{StaticResource input_combobox}" />
                    </StackPanel>
                    <Label Content="" Style="{StaticResource ico_Label}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    <StackPanel>
                        <Label Content="{lex:Loc Destination}" Style="{DynamicResource input_label}" />
                        <ComboBox x:Name="id_location_destinationComboBox" Grid.Column="1" Grid.Row="1" DisplayMemberPath="name" Width="111"
						  SelectedValuePath="id_location" ItemsSource="{Binding Source={StaticResource location_destViewSource}}"
						  SelectedItem="{Binding app_location_destination,
												  Mode=TwoWay,
												  ValidatesOnExceptions=True,ValidatesOnDataErrors=True,
												  NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
						  Style="{StaticResource input_combobox}" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>

            <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="2">
                <StackPanel>
                    <StackPanel IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}">
                        <Label Content="{lex:Loc Information}" FontWeight="Medium" Foreground="{StaticResource Label_ImportantColor}" />
                        <Label Content="{lex:Loc Employee}" Style="{StaticResource input_label}" />
                        <AdornerDecorator>
                            <Controls:SmartBox_Contact x:Name="sbxContact" Get_Employees="True" Select="set_ContactPref"
											   Text="{Binding employee.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </AdornerDecorator>
                        <Label HorizontalAlignment="Left" Content="{lex:Loc Comment}" Style="{StaticResource input_label}" />
                        <TextBox Grid.Column="1" Grid.Row="0" TextWrapping="WrapWithOverflow" Height="46"
						 Text="{Binding comment, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}"
						 Margin="5,1,5,5" />

                        <StackPanel Margin="2" VerticalAlignment="Center" Orientation="Horizontal">

                            <Label Content="" Style="{StaticResource ico_Label}" />
                            <TextBlock Text="{lex:Loc Branch}" Style="{StaticResource text_Label}" />
                            <ComboBox Width="Auto" Margin="0" Style="{StaticResource ComboToLabelStyle}"
									 metro:ControlsHelper.FocusBorderBrush="RoyalBlue" ItemsSource="{Binding Source={StaticResource branchViewSource}}"
									 metro:ControlsHelper.MouseOverBorderBrush="Silver"
									 DisplayMemberPath="name" SelectedValuePath="id_branch" SelectionChanged="cbxBranch_SelectionChanged"
									 SelectedValue="{Binding id_branch, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2">
                            <Label Content="" Style="{StaticResource ico_Label}" />
                            <TextBlock Text="{lex:Loc Department}" Style="{StaticResource text_Label}" />
                            <ComboBox x:Name="cbxDepartment" Style="{StaticResource ComboToLabelStyle}"
									 metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
									 metro:ControlsHelper.MouseOverBorderBrush="Silver"
									 DisplayMemberPath="name" Width="Auto"
									 SelectedValuePath="id_department"
									 SelectedValue="{Binding id_department, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                                <!--ItemsSource="{Binding Source={StaticResource projectViewSource}}"-->
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2">
                            <Label Content="Y" Style="{StaticResource ico_Label}" />
                            <TextBlock Text="{lex:Loc Project}" Style="{StaticResource text_Label}" />
                            <Label Content="{Binding project.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource generic_Label}" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center">
                        <Label Content="Z" Style="{StaticResource ico_Label}" />
                        <CheckBox Content="{lex:Loc Details}" Checked="chbxRowDetail_Checked" Unchecked="chbxRowDetail_Checked" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsEnabled="True">
                        <Label Content="" Style="{StaticResource btn_Label}" />
                        <TextBlock Margin="5,0" VerticalAlignment="Center">
										<Hyperlink PreviewMouseUp="toolBar_btnPrint_Click">
											<Run Text="{lex:Loc Document}" />
										</Hyperlink>
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>

            <Grid Grid.Row="1" Grid.ColumnSpan="3">
                <StackPanel 
                    Visibility="{Binding ElementName=toolBar, Path=IsEditable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Bool2Visibility}}">
                    <Label Content="{lex:Loc Items}" Style="{StaticResource input_label}" />
                    <Controls:SmartBox_Item x:Name="sbxItem" Select="cbxItem_KeyDown" 
                                            LocationID="{Binding ElementName=id_location_originComboBox,Path=SelectedValue,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Type="InStock_Only"
                                            Margin="0,0,8,0" HorizontalAlignment="Left" Width="256" VerticalAlignment="Top" />
                </StackPanel>
                <Grid Grid.Row="1" Margin="0,58,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="item_transfer_detailDataGrid"
					  AutoGenerateColumns="False"
					  EnableRowVirtualization="True"
					  IsEnabled="{Binding ElementName=toolBar,Path=IsEditable}"
					  ItemsSource="{Binding Source={StaticResource item_transferitem_transfer_detailViewSource}}">
                        <DataGrid.Columns>
                            <DataGridTextColumn IsReadOnly="True" Binding="{Binding item_product.item.code, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Header="{lex:Loc Cognitivo:local:Code}" Width="Auto" />
                            <DataGridTextColumn IsReadOnly="True" Binding="{Binding item_product.item.name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Header="{lex:Loc Cognitivo:local:Items}" MinWidth="128" />
                            <DataGridTextColumn  Header="{lex:Loc Cognitivo:local:Quantity}" Width="Auto"  >
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                        <Binding Path="quantity_origin" TargetNullValue="" Mode="TwoWay" />
                                        <Binding Source="{x:Static mainpref:Settings.Default}" Path="QuantityDecimalStringFormat" Mode="OneWay" />
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Movement}" IsReadOnly="True"
												Binding="{Binding movement_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="64" />
                            <DataGridTemplateColumn Width="26" Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="customcmd:CustomCommands.Delete"
													Style="{StaticResource btnDeleteChildStyle}"
													CommandParameter="{Binding}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <Grid Background="WhiteSmoke" Margin="4" IsEnabled="False">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                        <StackPanel>
                                            <Label Style="{StaticResource H1}" Content="{Binding item.name, FallbackValue=Expense}" />
                                            <Label Style="{StaticResource H3}" Content="{Binding item.code}" />
                                        </StackPanel>
                                        <StackPanel Visibility="{Binding item,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ExpireDate2Visible}}">
                                            <Label Content="{lex:Loc LotNumber}" Style="{StaticResource input_label}" />
                                            <TextBox Style="{StaticResource input_textbox}"
						                             Text="{Binding batch_code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                            <Label Content="{lex:Loc Date}" Style="{StaticResource input_label}" />
                                            <DatePicker x:Name="expiry_dateDatePicker" Style="{StaticResource input_datepicker}"
								                        SelectedDate="{Binding expire_date, Mode=TwoWay, NotifyOnValidationError=true,
								ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                    </DataGrid>
                    <Rectangle Width="1" Margin="6" Fill="Silver" Grid.Column="1" />
                    <DataGrid x:Name="project_task_dimensionDataGrid" AutoGenerateColumns="False" Grid.Column="1"
							  EnableRowVirtualization="True" IsReadOnly="True" CanUserAddRows="False"
							  ItemsSource="{Binding Source={StaticResource item_transferitem_transfer_detailitem_transfer_dimensionViewSource}}"
							  RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="dimension" Binding="{Binding app_dimension.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N}}"
																		Header="{lex:Loc Cognitivo:local:Dimension}" ElementStyle="{StaticResource RightAlignStyle}"
																		Width="auto" />
                            <DataGridTextColumn x:Name="valueColumn2" Binding="{Binding value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N}}"
																		Header="{lex:Loc Cognitivo:local:Value}" ElementStyle="{StaticResource RightAlignStyle}"
																		Width="auto" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Grid>
        </Grid>
        <cntrl:toolBar Name="toolBar" Grid.ColumnSpan="2" VerticalAlignment="Top"
                       btnAnull_Click="ToolBar_Mini_btnAnull_Click"
					   btnNew_Click="toolBar_btnNew_Click"
					   btnSave_Click="toolBar_btnSave_Click"
					   btnDelete_Click="toolBar_btnDelete_Click"
					   btnCancel_Click="toolBar_btnCancel_Click"
					   btnEdit_Click="toolBar_btnEdit_Click"
					   btnApprove_Click="toolBar_btnApprove_Click"
					   btnSearch_Click="toolBar_btnSearch_Click"
					   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
					   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
					   appName="Movement" />
    </Grid>
</Page>