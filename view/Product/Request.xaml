<Page x:Class="Cognitivo.Product.Request"
      xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:entity="clr-namespace:entity;assembly=entity"
      xmlns:cntrl="clr-namespace:cntrl;assembly=cntrl"
      xmlns:Controller="clr-namespace:entity.Controller.Product;assembly=entity"
      xmlns:converter="clr-namespace:Cognitivo.Converters"
      xmlns:customcmd="clr-namespace:Cognitivo.Class"
      xmlns:Controls="clr-namespace:cntrl.Controls;assembly=cntrl"
      xmlns:mainpref="clr-namespace:Cognitivo.Properties"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
          xmlns:lex="http://wpflocalizeextension.codeplex.com"
          lex:LocalizeDictionary.DesignCulture="en-US"
          lex:ResxLocalizationProvider.DefaultAssembly="Cognitivo"
          lex:ResxLocalizationProvider.DefaultDictionary="local"
      mc:Ignorable="d"
      Title="{lex:Loc RequestManagement}"
      MinHeight="500" MinWidth="800" Loaded="Page_Loaded">

    <Page.CommandBindings>
        <CommandBinding Command="customcmd:CustomCommands.Delete"
                        CanExecute="DeleteCommandBinding_CanExecute"
                        Executed="DeleteCommandBinding_Executed" />
    </Page.CommandBindings>
    <Page.Resources>
        <converter:ToStringFormatConverter x:Key="ToStringFormatConverter" />
        <BooleanToVisibilityConverter x:Key="B2V" />
        <converter:AddTwoValue x:Key="converter" />
    
        <Controller:RequestController x:Key="RequestController"/>

        <CollectionViewSource x:Key="item_requestViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_request}, CreateList=True}" />
        

        <CollectionViewSource x:Key="item_requestitem_request_detailViewSource" Source="{Binding item_request_detail, Source={StaticResource item_requestViewSource}}" />
        <CollectionViewSource x:Key="item_requestitem_request_detailDimensionViewSource" Source="{Binding item_request_dimension, Source={StaticResource item_requestitem_request_detailViewSource}}" />
        <CollectionViewSource x:Key="item_request_detailitem_request_decisionViewSource" Source="{Binding item_request_decision, Source={StaticResource item_requestitem_request_detailViewSource}}" />
        <CollectionViewSource x:Key="app_branchViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_branch}, CreateList=True}" />
        <CollectionViewSource x:Key="security_userViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:security_user}, CreateList=True}" />
        <CollectionViewSource x:Key="app_departmentViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_department}, CreateList=True}" />
        <CollectionViewSource x:Key="app_currencyViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:app_currency}, CreateList=True}" />
        <CollectionViewSource x:Key="production_orderViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:production_order}, CreateList=True}" />
        <CollectionViewSource x:Key="item_movementViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:item_movement}, CreateList=True}" />
        <CollectionViewSource x:Key="project_task_dimensionViewSource" d:DesignSource="{d:DesignInstance {x:Type entity:project_task_dimension}, CreateList=True}" />
    </Page.Resources>
    <Grid DataContext="{StaticResource item_requestViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="crud_modal" Background="{StaticResource Modal_BackgroundColor}"
              Visibility="Hidden" Grid.RowSpan="2" Grid.ColumnSpan="2" Panel.ZIndex="5" />
        <ListBox x:Name="item_requestDataGrid" Margin="0,0,0,35"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="1"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemContainerStyle="{StaticResource nav_ListSelection}" Style="{StaticResource nav_List}"
                 ItemsSource="{Binding}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <cntrl:navList recordName="{Binding name}" recordCode="{Binding security_user.name}"
                                   recordSecondaryName="{Binding comment}"
                                   State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <syncfusion:SfDataPager x:Name="dataPager" HorizontalContentAlignment="Center" VerticalAlignment="Bottom" Grid.Row="1" PageSize="5" Background="{StaticResource AccentColor_Brush}" Foreground="White"
                                UseOnDemandPaging="True" PagedSource="{Binding}" OnDemandLoading="dataPager_OnDemandLoading"/>
        <Grid Grid.Row="1" Grid.Column="1" Background="white">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="260" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <StackPanel HorizontalAlignment="Center" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}">
                <Label Content="{lex:Loc Date}" Style="{StaticResource input_label}" />
                <DatePicker x:Name="dtpTrans_Date" Style="{StaticResource input_datepicker}"
                                metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                                metro:ControlsHelper.MouseOverBorderBrush="Silver"
					            SelectedDate="{Binding request_date, StringFormat=d, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                <Label Content="{lex:Loc Name}" Style="{StaticResource input_label}" />
                <TextBox Style="{StaticResource input_textbox}" Text="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                <Label Content="{lex:Loc Document}" Style="{StaticResource input_label}" />
                <ComboBox Name="cbxDocument" DisplayMemberPath="app_document.name" SelectedValuePath="id_range"
                          metro:ControlsHelper.FocusBorderBrush="RoyalBlue" SelectedIndex="0"
                          metro:ControlsHelper.MouseOverBorderBrush="Silver"
                          Style="{StaticResource input_combobox}"
                          SelectedValue="{Binding id_range, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                <Label Content="{lex:Loc Number}" Style="{StaticResource input_label}" />
                <TextBox Style="{StaticResource input_textbox}"
                         metro:TextBoxHelper.SelectAllOnFocus="True"
                         metro:TextBoxHelper.Watermark="{Binding NumberWatermark, Mode=OneWay}"
                         metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                         metro:ControlsHelper.MouseOverBorderBrush="Silver"
                         Text="{Binding Path=number, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                <Label Content="{lex:Loc Currency}" Style="{StaticResource input_label}" />
                <ComboBox x:Name="cbxcurrency" Style="{StaticResource input_combobox}"
                              metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                              metro:ControlsHelper.MouseOverBorderBrush="Silver"
                              DisplayMemberPath="name" SelectedValuePath="id_currency" SelectedValue="{Binding id_currency,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding Source={StaticResource app_currencyViewSource}}" />

                <Label Content="{lex:Loc Comment}" Style="{StaticResource input_label}" />
                <TextBox Style="{StaticResource input_textbox}" Height="64"
                            metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                            metro:ControlsHelper.MouseOverBorderBrush="Silver" Text="{Binding comment,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>

            <StackPanel Grid.Column="1" HorizontalAlignment="Left" Margin="32,0">

                <StackPanel Orientation="Horizontal">
                    <Label Content="{lex:Loc User}" Style="{StaticResource input_label}" />
                    <Label Content="{Binding request_user.name}" Style="{StaticResource generic_Label}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <Label Content="{lex:Loc Project}" Style="{StaticResource input_label}" />
                    <Label Content="{Binding project.name}" Style="{StaticResource generic_Label}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Content="" Style="{StaticResource btn_Label}" />
                    <TextBlock Margin="5,0" VerticalAlignment="Center"><Hyperlink PreviewMouseUp="Print_Click"><Run Text="{lex:Loc Document}" /></Hyperlink></TextBlock>
                </StackPanel>
                <StackPanel Margin="2" Orientation="Horizontal" VerticalAlignment="Center">
                    <Label Content="Z" Style="{StaticResource ico_Label}" />
                    <CheckBox Content="{lex:Loc Details}" Checked="RowDetail_Checked" Unchecked="RowDetail_Checked" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Content="{lex:Loc SalesOrder}" Style="{StaticResource input_label}" />
                    <Label Content="{Binding sales_order.number}" Style="{StaticResource generic_Label}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <Label Content="{lex:Loc ProductionOrder}"  Style="{StaticResource input_label}" />
                    <Label Content="{Binding production_order.name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource generic_Label}" />
                </StackPanel>
               
                
                <Label Content="{lex:Loc Branch}"  Style="{StaticResource input_label}" />
                <ComboBox Style="{StaticResource input_combobox}" DisplayMemberPath="name"
                          metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                          metro:ControlsHelper.MouseOverBorderBrush="Silver"
                          SelectedValue="{Binding id_branch, Mode=TwoWay, NotifyOnValidationError=True,
                          ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                          SelectedValuePath="id_branch"
                          ItemsSource="{Binding Source={StaticResource app_branchViewSource}}" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}"/>
                <Label Content="{lex:Loc Requested}"  Style="{StaticResource input_label}" />
                <ComboBox Style="{StaticResource input_combobox}" DisplayMemberPath="name"
                          metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                          metro:ControlsHelper.MouseOverBorderBrush="Silver"
                          SelectedItem="{Binding given_user, Mode=TwoWay, NotifyOnValidationError=True,
                          ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                          SelectedValuePath="id_user"
                          ItemsSource="{Binding Source={StaticResource security_userViewSource}}" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}"/>
                <Label Content="{lex:Loc Department}"  Style="{StaticResource input_label}" />
                <ComboBox  Style="{StaticResource input_combobox}" DisplayMemberPath="name"
                          metro:ControlsHelper.FocusBorderBrush="RoyalBlue"
                          metro:ControlsHelper.MouseOverBorderBrush="Silver"
                          SelectedValue="{Binding id_department, Mode=TwoWay, NotifyOnValidationError=True,
                          ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                          SelectedValuePath="id_department"
                          ItemsSource="{Binding Source={StaticResource app_departmentViewSource}}" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}"/>
            </StackPanel>

            <TabControl Grid.Row="1" Grid.ColumnSpan="2">
                <TabItem Header="{lex:Loc RequestResource}">
                    <StackPanel>
                        <DataGrid x:Name="item_request_detailMovementDataGrid" 
                          AutoGenerateColumns="False" EnableRowVirtualization="True" CanUserAddRows="False"
                          ItemsSource="{Binding Source={StaticResource item_requestitem_request_detailViewSource}}" SelectionMode="Single"
                          RowDetailsVisibilityMode="Collapsed" LoadingRowDetails="item_request_detailMovementDataGrid_LoadingRowDetails">
                        <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding item.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{lex:Loc Cognitivo:local:Item}" Width="SizeToHeader" IsReadOnly="True" />

                                <DataGridTemplateColumn Header="{lex:Loc Cognitivo:local:NeededbyDate}" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding date_needed_by, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn  Header="{lex:Loc Cognitivo:local:Quantity}" Width="SizeToHeader" IsReadOnly="True" >
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                        <Binding Path="quantity" TargetNullValue="" Mode="TwoWay" />
                                        <Binding Source="{x:Static mainpref:Settings.Default}" Path="QuantityDecimalStringFormat" Mode="OneWay" />
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridComboBoxColumn x:Name="cmburgency" Header="{lex:Loc Cognitivo:local:Urgency}" Width="*" SelectedValueBinding="{Binding urgency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <DataGridTextColumn Binding="{Binding comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{lex:Loc Cognitivo:local:Comment}" Width="SizeToHeader" />
                            <DataGridTextColumn Binding="{Binding Balance, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Header="{lex:Loc Cognitivo:local:Available}" Width="SizeToHeader" IsReadOnly="True" />
                        </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <DataGrid x:Name="item_dimentionDataGrid" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False"
                        		          EnableRowVirtualization="True" Height="Auto" Margin="8,4"
                        		          ItemsSource="{Binding Source={StaticResource item_requestitem_request_detailDimensionViewSource}}"
                        		          RowDetailsVisibilityMode="VisibleWhenSelected" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding app_dimension.name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                        Header="{lex:Loc Cognitivo:local:Dimension}" Width="100" FontWeight="Bold" />
                                        <DataGridTextColumn Binding="{Binding value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                        Header="{lex:Loc Cognitivo:local:Value}" Width="100" FontWeight="Bold" />
                                        <DataGridTextColumn Binding="{Binding app_measurement.name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                        Header="{lex:Loc Cognitivo:local:Measurement}" Width="100" FontWeight="Bold" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                    </DataGrid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="{lex:Loc RequestManagement}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="3*" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Label Content="{lex:Loc RequestResource}" Style="{StaticResource H2}" VerticalAlignment="Top" Margin="0,20,0,0" />
                            <Button Content="{lex:Loc GetData}" VerticalAlignment="Top" Click="GenerateaMovement_Click"/>
                            <!--<Button Content="{lex:Loc AddNew}" VerticalAlignment="Top" Click="AddNew_Click"/>-->
                            <DataGrid  Margin="0,70,0,0"
                                      AutoGenerateColumns="False" EnableRowVirtualization="True" CanUserAddRows="False" SelectionChanged="DataGrid_SelectionChanged"
                                      ItemsSource="{Binding Source={StaticResource item_requestitem_request_detailViewSource}}" SelectionMode="Single"
                                      RowDetailsVisibilityMode="VisibleWhenSelected" LoadingRowDetails="item_request_detailMovementDataGrid_LoadingRowDetails">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding item.name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{lex:Loc Cognitivo:local:Item}" Width="SizeToHeader" IsReadOnly="True" />
                                    <DataGridTextColumn Binding="{Binding Balance, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}"
                                                        Header="{lex:Loc Cognitivo:local:Available}" Width="64" CellStyle="{StaticResource Number_CellStyle}" IsReadOnly="True" />
                                </DataGrid.Columns>
                                <DataGrid.RowDetailsTemplate>
                                    <DataTemplate>
                                        <DataGrid x:Name="item_dimentionDataGrid" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False"
                        		                  EnableRowVirtualization="True" Height="Auto" Margin="8,4"
                        		                  ItemsSource="{Binding Source={StaticResource item_requestitem_request_detailDimensionViewSource}}"
                        		                  RowDetailsVisibilityMode="VisibleWhenSelected" >
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding app_dimension.name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                        Header="{lex:Loc Cognitivo:local:Dimension}" Width="100" FontWeight="Bold" />
                                                <DataGridTextColumn Binding="{Binding value, StringFormat=N2, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                        Header="{lex:Loc Cognitivo:local:Value}" Width="100" FontWeight="Bold" />
                                                <DataGridTextColumn Binding="{Binding app_measurement.name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                        Header="{lex:Loc Cognitivo:local:Measurement}" Width="100" FontWeight="Bold" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </DataTemplate>
                                </DataGrid.RowDetailsTemplate>
                            </DataGrid>
                        </Grid>

                        <TabControl Grid.Column="1" Grid.Row="1" IsEnabled="{Binding ElementName=toolBar, Path=IsEditable}">
                            <TabItem>
                                <TabItem.Header>
                                    <Grid>
                                        <Label Content="" FontSize="24" Width="32" Style="{StaticResource ico_Label}" />
                                        <Controls:NotificationIcon Number="{Binding TotalSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                   VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,0,-5,0" />
                                    </Grid>
                                </TabItem.Header>
                                <DataGrid x:Name="item_request_detailDataGrid" AutoGenerateColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                                          CanUserAddRows="False"
                                         ItemsSource="{Binding Source={StaticResource item_request_detailitem_request_decisionViewSource}}" SelectionMode="Single">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding decision, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Header="{lex:Loc Cognitivo:local:Module}" Width="*" IsReadOnly="True" />
                                        <DataGridComboBoxColumn x:Name="cbxLocation" Header="{lex:Loc Cognitivo:local:Location}" SelectedValueBinding="{Binding id_location,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
															DisplayMemberPath="name" SelectedValuePath="id_location" IsReadOnly="True" />
                                        <DataGridTextColumn
                                                Header="{lex:Loc Cognitivo:local:Quantity}" Width="Auto" IsReadOnly="True" >
                                            <DataGridTextColumn.Binding>
                                                <MultiBinding Converter="{StaticResource ToStringFormatConverter}" UpdateSourceTrigger="PropertyChanged" 
                                   ValidatesOnDataErrors="True" NotifyOnValidationError="True" TargetNullValue="">
                                                    <Binding Path="quantity" TargetNullValue="" Mode="TwoWay" />
                                                    <Binding Source="{x:Static mainpref:Settings.Default}" Path="QuantityDecimalStringFormat" Mode="OneWay" />
                                                </MultiBinding>
                                            </DataGridTextColumn.Binding>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Movement}" IsReadOnly="True"
                                                Binding="{Binding movement_id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="128" />
                                        <DataGridTemplateColumn Width="Auto" Header="">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Command="customcmd:CustomCommands.Delete" CommandParameter="{Binding}" Style="{StaticResource btnDeleteChildStyle}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                    
                                </DataGrid>
                            </TabItem>
                            <TabItem Header="{lex:Loc Movement}" Visibility="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource B2V}}">
                                <Grid>
                                    <DataGrid x:Name="item_request_decisionmovementDataGrid" AutoGenerateColumns="False" CanUserAddRows="False" EnableRowVirtualization="True" RowEditEnding="item_request_decisionDataGrid_RowEditEnding">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn
                                Header="{lex:Loc Cognitivo:local:Location}" Binding="{Binding location}" IsReadOnly="True" Width="*" />
                                            <DataGridTextColumn
                                Header="{lex:Loc Cognitivo:local:Available}" Binding="{Binding avlqty, StringFormat={}{0:N2}}" IsReadOnly="True" Width="*" />
                                            <DataGridTextColumn
                                Header="{lex:Loc Cognitivo:local:Requested}" Binding="{Binding Quantity, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="*" />
                                        </DataGrid.Columns>
                                        
                                    </DataGrid>
                                    
                                </Grid>
                            </TabItem>
                            <TabItem Header="{lex:Loc Transfer}" Visibility="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource B2V}}">
                                <Grid>
                                    <DataGrid x:Name="item_request_decisiontransferDataGrid" AutoGenerateColumns="False"  EnableRowVirtualization="True" RowEditEnding="TransferDataGrid_RowEditEnding">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn
                                                Header="{lex:Loc Cognitivo:local:Branch}" Binding="{Binding branch}" IsReadOnly="True" Width="*" />
                                            <DataGridTextColumn
                                                Header="{lex:Loc Cognitivo:local:Available}" Binding="{Binding avlqty, StringFormat={}{0:N2}}" IsReadOnly="True" Width="*" />
                                            <DataGridTextColumn
                                                Header="{lex:Loc Cognitivo:local:Requested}" Binding="{Binding Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="*" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                 
                                </Grid>
                            </TabItem>
                            <TabItem Header="{lex:Loc Purchase}" Visibility="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource B2V}}">
                                <DataGrid x:Name="item_request_decisionpurchaseDataGrid" AutoGenerateColumns="False"
                              EnableRowVirtualization="True"
                              RowEditEnding="PurchaseDataGrid_RowEditEnding">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn
                                Header="{lex:Loc Cognitivo:local:Requested}" Binding="{Binding Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="*" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </TabItem>
                            <TabItem Header="{lex:Loc ProductionOrder}" Visibility="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource B2V}}">
                                <DataGrid x:Name="item_request_decisionproductionDataGrid" AutoGenerateColumns="False"  EnableRowVirtualization="True" RowEditEnding="ProductionDataGrid_RowEditEnding">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn
                                Header="{lex:Loc Cognitivo:local:Items}" Binding="{Binding name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="*" />

                                        <DataGridTextColumn
                                Header="{lex:Loc Cognitivo:local:Requested}" Binding="{Binding Quantity,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="*" />
                                    </DataGrid.Columns>
                                    <DataGrid.RowDetailsTemplate>
                                        <DataTemplate>
                                            <DataGrid x:Name="item_dimentionDataGrid" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False"
                        		          EnableRowVirtualization="True" Height="Auto" Margin="8,4"
                        		          ItemsSource="{Binding Source={StaticResource project_task_dimensionViewSource}}"
                        		          RowDetailsVisibilityMode="VisibleWhenSelected" IsReadOnly="True">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Binding="{Binding app_dimension.name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                            Header="{lex:Loc Cognitivo:local:Dimension}" Width="100" />
                                                    <DataGridTextColumn Binding="{Binding value, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:N2}}"
                                                            Header="{lex:Loc Cognitivo:local:Value}" Width="100" />
                                                    <DataGridTextColumn Binding="{Binding app_measurement.name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                            Header="{lex:Loc Cognitivo:local:Measurement}" Width="100" />
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </DataTemplate>
                                    </DataGrid.RowDetailsTemplate>
                                </DataGrid>
                            </TabItem>
                            <TabItem Header="{lex:Loc Internal Use}" Visibility="{Binding ElementName=toolBar, Path=IsEditable, Converter={StaticResource B2V}}">
                                <DataGrid x:Name="item_request_decisioninternalDataGrid" AutoGenerateColumns="False"
                              EnableRowVirtualization="True"
                              RowEditEnding="InternalDataGrid_RowEditEnding">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="{lex:Loc Cognitivo:local:Requested}" Binding="{Binding Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:N2}}" Width="*" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>

        <cntrl:toolBar x:Name="toolBar" Grid.ColumnSpan="2" VerticalAlignment="Top"
                       btnEdit_Click="Edit_Click"
                       btnCancel_Click="Cancel_Click"
                       btnApprove_Click="Approve_Click"
                       btnSave_Click="Save_Click"
                       btnDelete_Click="Delete_Click"
                       btnSearch_Click="Search_Click"
                       btnSearchInSource_Click="toolBar_btnSearchInSource_Click"
                       State="{Binding State, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" appName="RequestResource"
                                       Status="{Binding status, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
    </Grid>
</Page>